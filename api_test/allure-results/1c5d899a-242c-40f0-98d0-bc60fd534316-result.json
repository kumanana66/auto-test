{"name": "test_crawler_tasks[case15]", "status": "failed", "statusDetails": {"message": "AssertionError: 消息不符：预期数据分析已启动，实际操作成功，完整response：{\"success\":true,\"message\":\"操作成功\",\"data\":\"数据分析已启动\"}\nassert '操作成功' == '数据分析已启动'\n  - 数据分析已启动\n  + 操作成功", "trace": "case = {'case_id': 'task_016', 'expected_code': 200, 'expected_message': '数据分析已启动', 'expected_success': True, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODY5ODMsImV4cCI6MTc1Mzk5NDE4M30.PkGw0ZlYIWKPsU04AkNVw-I5GevWOWNoLxNdiU4KwlM'\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token):\n        allure.story(case[\"name\"])\n        allure.title(case[\"case_id\"] + \": \" + case[\"name\"])\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            # 先创建一个测试任务获取ID\n            from utils.context import context\n            if not context.get(\"task_id\"):\n                create_response = Request.send_request(\n                    \"POST\", \"/crawler/tasks\",\n                    json={\n                        \"processName\": \"测试任务\",\n                        \"asinList\": \"B08XJ8J7SZ\",\n                        \"requiredInfo\": [\"price\"],\n                        \"platform\": \"Amazon\",\n                        \"timeCycle\": \"daily\"\n                    },\n                    token=auth_token\n                )\n                context.set(\"task_id\", create_response.json()[\"data\"][\"id\"])\n            task_id = context.get(\"task_id\")\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n    \n        # 预处理请求\n        request_data = preprocess_request(case, auth_token)\n    \n        # 发送请求\n        response = Request.send_request(\n            method=case[\"method\"],\n            endpoint=case[\"url\"],\n            json=request_data.get(\"json\"),\n            params=request_data.get(\"params\"),\n            headers=request_data.get(\"headers\"),\n            token=auth_token\n        )\n    \n        # 断言\n>       assert_response(\n            response,\n            expected_code=case[\"expected_code\"],\n            expected_success=case.get(\"expected_success\"),\n            expected_message=case.get(\"expected_message\")\n        )\n\ntests\\test_crawler_tasks.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, expected_code = 200\nexpected_success = True, expected_message = '数据分析已启动'\n\n    @allure.step(\"验证响应：状态码{expected_code}，消息{expected_message}\")\n    def assert_response(response, expected_code, expected_success=None, expected_message=None):\n        \"\"\"验证响应结果\"\"\"\n        assert response.status_code == expected_code, \\\n            f\"状态码不符：预期{expected_code}，实际{response.status_code}，完整response：{response.text}\"\n    \n        if response.status_code != 200:\n            return\n    \n        try:\n            json_data = response.json()\n        except:\n            assert False, f\"响应不是有效的JSON格式: {response.text}\"\n    \n        if expected_success is not None:\n            assert json_data.get(\"success\") == expected_success, \\\n                f\"success字段不符：预期{expected_success}，实际{json_data.get('success')}，完整response：{response.text}\"\n    \n        if expected_message:\n>           assert json_data.get(\"message\") == expected_message, \\\n                f\"消息不符：预期{expected_message}，实际{json_data.get('message')}，完整response：{response.text}\"\nE           AssertionError: 消息不符：预期数据分析已启动，实际操作成功，完整response：{\"success\":true,\"message\":\"操作成功\",\"data\":\"数据分析已启动\"}\nE           assert '操作成功' == '数据分析已启动'\nE             - 数据分析已启动\nE             + 操作成功\n\nutils\\test_utils.py:23: AssertionError"}, "steps": [{"name": "发送请求：'POST' '/crawler/tasks/243/analyze'", "status": "passed", "attachments": [{"name": "请求信息", "source": "b9dcf2b3-9a3f-400f-816d-929dae6e51b6-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "c67c1517-3c80-4e70-837b-366b96856e9c-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "a76eea7b-f108-4994-ad8d-894fb3217eba-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "ccf0d474-ff14-46f8-a3f4-306dfe87dc25-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "f78f63c0-744c-4752-8f5f-397d0d23a341-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'POST'"}, {"name": "endpoint", "value": "'/crawler/tasks/243/analyze'"}, {"name": "headers", "value": "{}"}, {"name": "params", "value": "{}"}, {"name": "json", "value": "{}"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODY5ODMsImV4cCI6MTc1Mzk5NDE4M30.PkGw0ZlYIWKPsU04AkNVw-I5GevWOWNoLxNdiU4KwlM'"}], "start": 1753986983348, "stop": 1753986983413}, {"name": "验证响应：状态码200，消息'数据分析已启动'", "status": "failed", "statusDetails": {"message": "AssertionError: 消息不符：预期数据分析已启动，实际操作成功，完整response：{\"success\":true,\"message\":\"操作成功\",\"data\":\"数据分析已启动\"}\nassert '操作成功' == '数据分析已启动'\n  - 数据分析已启动\n  + 操作成功\n", "trace": "  File \"D:\\Anaconda3\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\工作记录\\项目说明\\api_test\\utils\\test_utils.py\", line 23, in assert_response\n    assert json_data.get(\"message\") == expected_message, \\\n"}, "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "True"}, {"name": "expected_message", "value": "'数据分析已启动'"}], "start": 1753986983415, "stop": 1753986983417}], "attachments": [{"name": "log", "source": "0f84bb5d-b0f1-4a70-ae0e-4d28491b9ecc-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "63957d55-9af6-43b1-a2b6-348cd1382cdf-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "add77e43-7cd9-4f0e-b6d0-dc19f42d7fac-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 'task_016', 'name': '执行数据分析并下载PPT', 'method': 'POST', 'url': '/crawler/tasks/{task_id}/analyze', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_success': True, 'expected_message': '数据分析已启动'}"}], "start": 1753986983347, "stop": 1753986983423, "uuid": "9fb2204a-40a2-48ea-88bf-b77c7f35c324", "historyId": "919c4d1a236e50cc79ffa3a9026e1338", "testCaseId": "d9da2eb06171020188c155aa066adc0e", "fullName": "tests.test_crawler_tasks#test_crawler_tasks", "labels": [{"name": "feature", "value": "爬虫任务模块"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_crawler_tasks"}, {"name": "host", "value": "CYJ"}, {"name": "thread", "value": "23876-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_crawler_tasks"}], "titlePath": ["tests", "test_crawler_tasks.py"]}