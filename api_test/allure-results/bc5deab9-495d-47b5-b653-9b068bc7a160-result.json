{"name": "test_crawler_tasks[case16]", "status": "failed", "statusDetails": {"message": "Failed: 数据分析失败，无法下载PPT", "trace": "case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2MzY1ODEsImV4cCI6MTc1NDY0Mzc4MX0.Y0xecLF6oLmA4ID0Hr9NR5FMdQnUcGuVNBRxOOl42ZI'\ntask_id = 699\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed"}, "steps": [{"name": "发送请求：'POST' '/crawler/tasks/699/analyze'", "status": "passed", "attachments": [{"name": "请求信息", "source": "1b427d81-2c2d-4bb5-a708-ce1ce43045f6-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "85ee16f5-1b78-4462-845d-39b4b8be3be0-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "ba1725b4-a420-4cc0-a22a-b034b78fa4fa-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "62371f65-d62f-4268-b620-22bbe94d5082-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "e666330f-3982-49b7-a60a-473bbc807005-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'POST'"}, {"name": "endpoint", "value": "'/crawler/tasks/699/analyze'"}, {"name": "headers", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2MzY1ODEsImV4cCI6MTc1NDY0Mzc4MX0.Y0xecLF6oLmA4ID0Hr9NR5FMdQnUcGuVNBRxOOl42ZI'"}], "start": 1754636581434, "stop": 1754636581447}, {"name": "验证响应：状态码200，消息'操作成功'", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "True"}, {"name": "expected_message", "value": "'操作成功'"}, {"name": "is_file", "value": "False"}], "start": 1754636581447, "stop": 1754636581447}, {"name": "发送请求：'GET' '/crawler/tasks/699/analyze/status'", "status": "passed", "attachments": [{"name": "请求信息", "source": "8da94fec-9a5e-4d56-989e-4b3d147d1a0e-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "522a7bf6-5ae8-401a-918c-bce15616dc4b-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "34b83b8e-5b23-4652-843b-6a79f0126eff-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "7ef8405f-c726-4038-b371-70e9bd958f65-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "0a7615fb-a686-4a53-90e3-b0c3dc186dda-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'GET'"}, {"name": "endpoint", "value": "'/crawler/tasks/699/analyze/status'"}, {"name": "headers", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2MzY1ODEsImV4cCI6MTc1NDY0Mzc4MX0.Y0xecLF6oLmA4ID0Hr9NR5FMdQnUcGuVNBRxOOl42ZI'"}], "start": 1754636581448, "stop": 1754636581461}, {"name": "验证响应：状态码200，消息None", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "None"}, {"name": "expected_message", "value": "None"}, {"name": "is_file", "value": "False"}], "start": 1754636581461, "stop": 1754636581461}], "attachments": [{"name": "测试信息", "source": "9bb5897a-043b-4c00-b8e7-646c67ad315c-attachment.txt", "type": "text/plain"}, {"name": "前置依赖", "source": "c76faf8a-2c31-45ab-ac83-da98e10a0b9d-attachment.txt", "type": "text/plain"}, {"name": "前置操作结果", "source": "9e5f0005-8a08-4b0a-a423-995d1c2dc129-attachment.txt", "type": "text/plain"}, {"name": "状态轮询", "source": "6613fade-9d0b-4a92-8aaa-2bf582e92b4e-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "e8e6fec4-8f9a-4807-92b3-c69a3c7c922e-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "cdb2ad31-d120-46ea-8691-26b8e119638d-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "61c579a9-78f1-4b29-ad6b-1516f35a0091-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}], "start": 1754636581433, "stop": 1754636581462, "uuid": "3d1d1c8e-55d0-438c-a2a6-35a48507f5d3", "historyId": "44911dea1ced40d3ea722dd950568137", "testCaseId": "d9da2eb06171020188c155aa066adc0e", "fullName": "tests.test_crawler_tasks#test_crawler_tasks", "labels": [{"name": "feature", "value": "爬虫任务模块"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_crawler_tasks"}, {"name": "host", "value": "CYJ"}, {"name": "thread", "value": "11184-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_crawler_tasks"}], "titlePath": ["tests", "test_crawler_tasks.py"]}