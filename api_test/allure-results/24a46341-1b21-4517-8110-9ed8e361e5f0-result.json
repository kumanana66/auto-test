{"name": "test_crawler_tasks[case16]", "status": "failed", "statusDetails": {"message": "Failed: 数据分析失败，无法下载PPT", "trace": "case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2Mzk4OTksImV4cCI6MTc1NDY0NzA5OX0.mLk7ECRxaFDhxfbDcCGwfAmKY0dXnQpOUxQVbfgrCBQ'\ntask_id = 737\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed"}, "steps": [{"name": "发送请求：'POST' '/crawler/tasks/737/analyze'", "status": "passed", "attachments": [{"name": "请求信息", "source": "85fb2bb6-ed42-4ceb-9624-8f4f0d10ea28-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "0a25ee05-f85f-4241-8794-486628756ed7-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "03cc5b8b-066e-4677-94a9-9333217dacde-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "eac042ed-940b-425f-8e8e-608abf8b4eea-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "6ddc38c3-9c9b-4090-bccf-f2bcaa8a5e45-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'POST'"}, {"name": "endpoint", "value": "'/crawler/tasks/737/analyze'"}, {"name": "headers", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2Mzk4OTksImV4cCI6MTc1NDY0NzA5OX0.mLk7ECRxaFDhxfbDcCGwfAmKY0dXnQpOUxQVbfgrCBQ'"}], "start": 1754639899508, "stop": 1754639899525}, {"name": "验证响应：状态码200，消息'操作成功'", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "True"}, {"name": "expected_message", "value": "'操作成功'"}, {"name": "is_file", "value": "False"}], "start": 1754639899525, "stop": 1754639899525}, {"name": "发送请求：'GET' '/crawler/tasks/737/analyze/status'", "status": "passed", "attachments": [{"name": "请求信息", "source": "b966b004-26ed-4c98-98b4-81bcc7bcc518-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "be66cfb4-e851-42a7-9dea-f63975b01f25-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "cfd58dac-f555-47e9-97b6-31c8c06e002d-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "0796f545-9672-4002-86b4-9556d3bdd4cb-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "3f3b7f99-524e-4593-a070-af3d496b1025-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'GET'"}, {"name": "endpoint", "value": "'/crawler/tasks/737/analyze/status'"}, {"name": "headers", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2Mzk4OTksImV4cCI6MTc1NDY0NzA5OX0.mLk7ECRxaFDhxfbDcCGwfAmKY0dXnQpOUxQVbfgrCBQ'"}], "start": 1754639899527, "stop": 1754639899544}, {"name": "验证响应：状态码200，消息None", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "None"}, {"name": "expected_message", "value": "None"}, {"name": "is_file", "value": "False"}], "start": 1754639899544, "stop": 1754639899544}], "attachments": [{"name": "测试信息", "source": "ec9d95ea-4e2d-40ea-ab8d-4c9a8c5d2a15-attachment.txt", "type": "text/plain"}, {"name": "前置依赖", "source": "6e247ad2-062d-4816-99da-76b414771827-attachment.txt", "type": "text/plain"}, {"name": "前置操作结果", "source": "6e2f70aa-05b7-4568-aec1-8df52e148ffb-attachment.txt", "type": "text/plain"}, {"name": "状态轮询", "source": "63d77a16-35c9-4808-8f62-73de5eb92cf2-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "822c7a71-5441-4b32-b07d-d9bbe1c835ed-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "c8d38699-27f7-4fe5-9e01-d5993c012a9a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "1cb4853d-28a7-40fe-be50-0bf3eee277c4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}], "start": 1754639899506, "stop": 1754639899546, "uuid": "57cad95a-1df4-48f0-982d-f70323e2762a", "historyId": "28e51b3a5942de3703848cf82430b1da", "testCaseId": "d9da2eb06171020188c155aa066adc0e", "fullName": "tests.test_crawler_tasks#test_crawler_tasks", "labels": [{"name": "feature", "value": "爬虫任务模块"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_crawler_tasks"}, {"name": "host", "value": "CYJ"}, {"name": "thread", "value": "21092-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_crawler_tasks"}], "titlePath": ["tests", "test_crawler_tasks.py"]}