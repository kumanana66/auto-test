{"name": "test_crawler_tasks[case3]", "status": "failed", "statusDetails": {"message": "AssertionError: 状态码不符：预期403，实际200，完整response：{\"success\":true,\"message\":\"任务创建成功\",\"data\":{\"id\":247,\"processName\":\"亚马逊监控\",\"asinList\":\"B08XJ8J7SZ,B08LGD78Q5\",\"requiredInfo\":null,\"platform\":\"Amazon\",\"timeCycle\":\"daily\",\"createTime\":\"2025-08-01T02:38:29.9467059\",\"updateTime\":\"2025-08-01T02:38:29.9467059\",\"status\":\"ACTIVE\",\"userId\":4,\"username\":\"admin1155\"}}\nassert 200 == 403\n +  where 200 = <Response [200]>.status_code", "trace": "case = {'case_id': 'task_004', 'expected_code': 403, 'expected_message': '请至少选择一项所需信息', 'expected_success': False, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODcxMDksImV4cCI6MTc1Mzk5NDMwOX0.WBpXPY-sV68fBbDv17bI2aFclOLK4o6ICWaMhCZ9JQA'\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token):\n        allure.story(case[\"name\"])\n        allure.title(case[\"case_id\"] + \": \" + case[\"name\"])\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            # 先创建一个测试任务获取ID\n            from utils.context import context\n            if not context.get(\"task_id\"):\n                create_response = Request.send_request(\n                    \"POST\", \"/crawler/tasks\",\n                    json={\n                        \"processName\": \"测试任务\",\n                        \"asinList\": \"B08XJ8J7SZ\",\n                        \"requiredInfo\": [\"price\"],\n                        \"platform\": \"Amazon\",\n                        \"timeCycle\": \"daily\"\n                    },\n                    token=auth_token\n                )\n                context.set(\"task_id\", create_response.json()[\"data\"][\"id\"])\n            task_id = context.get(\"task_id\")\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n    \n        # 预处理请求\n        request_data = preprocess_request(case, auth_token)\n    \n        # 发送请求\n        response = Request.send_request(\n            method=case[\"method\"],\n            endpoint=case[\"url\"],\n            json=request_data.get(\"json\"),\n            params=request_data.get(\"params\"),\n            headers=request_data.get(\"headers\"),\n            token=auth_token\n        )\n    \n        # 断言\n>       assert_response(\n            response,\n            expected_code=case[\"expected_code\"],\n            expected_success=case.get(\"expected_success\"),\n            expected_message=case.get(\"expected_message\")\n        )\n\ntests\\test_crawler_tasks.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, expected_code = 403\nexpected_success = False\nexpected_message = '请至少选择一项所需信息'\n\n    @allure.step(\"验证响应：状态码{expected_code}，消息{expected_message}\")\n    def assert_response(response, expected_code, expected_success=None, expected_message=None):\n        \"\"\"验证响应结果\"\"\"\n>       assert response.status_code == expected_code, \\\n            f\"状态码不符：预期{expected_code}，实际{response.status_code}，完整response：{response.text}\"\nE       AssertionError: 状态码不符：预期403，实际200，完整response：{\"success\":true,\"message\":\"任务创建成功\",\"data\":{\"id\":247,\"processName\":\"亚马逊监控\",\"asinList\":\"B08XJ8J7SZ,B08LGD78Q5\",\"requiredInfo\":null,\"platform\":\"Amazon\",\"timeCycle\":\"daily\",\"createTime\":\"2025-08-01T02:38:29.9467059\",\"updateTime\":\"2025-08-01T02:38:29.9467059\",\"status\":\"ACTIVE\",\"userId\":4,\"username\":\"admin1155\"}}\nE       assert 200 == 403\nE        +  where 200 = <Response [200]>.status_code\n\nutils\\test_utils.py:7: AssertionError"}, "steps": [{"name": "发送请求：'POST' '/crawler/tasks'", "status": "passed", "attachments": [{"name": "请求信息", "source": "015d7232-edaa-410a-a425-baec282e7d43-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "dfccf505-4331-47a8-a70c-18319e559c9e-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "d2c1b737-5922-476e-b389-4a729c881261-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "d017ac0f-990c-44c4-9b10-96d78367eaea-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "2124678c-435e-4c34-8071-2e64020a66ff-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'POST'"}, {"name": "endpoint", "value": "'/crawler/tasks'"}, {"name": "headers", "value": "{}"}, {"name": "params", "value": "{}"}, {"name": "json", "value": "{'processName': '亚马逊监控', 'asinList': 'B08XJ8J7SZ,B08LGD78Q5', 'platform': 'Amazon', 'timeCycle': 'daily'}"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODcxMDksImV4cCI6MTc1Mzk5NDMwOX0.WBpXPY-sV68fBbDv17bI2aFclOLK4o6ICWaMhCZ9JQA'"}], "start": 1753987109917, "stop": 1753987109966}, {"name": "验证响应：状态码403，消息'请至少选择一项所需信息'", "status": "failed", "statusDetails": {"message": "AssertionError: 状态码不符：预期403，实际200，完整response：{\"success\":true,\"message\":\"任务创建成功\",\"data\":{\"id\":247,\"processName\":\"亚马逊监控\",\"asinList\":\"B08XJ8J7SZ,B08LGD78Q5\",\"requiredInfo\":null,\"platform\":\"Amazon\",\"timeCycle\":\"daily\",\"createTime\":\"2025-08-01T02:38:29.9467059\",\"updateTime\":\"2025-08-01T02:38:29.9467059\",\"status\":\"ACTIVE\",\"userId\":4,\"username\":\"admin1155\"}}\nassert 200 == 403\n +  where 200 = <Response [200]>.status_code\n", "trace": "  File \"D:\\Anaconda3\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\工作记录\\项目说明\\api_test\\utils\\test_utils.py\", line 7, in assert_response\n    assert response.status_code == expected_code, \\\n"}, "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "403"}, {"name": "expected_success", "value": "False"}, {"name": "expected_message", "value": "'请至少选择一项所需信息'"}], "start": 1753987109966, "stop": 1753987109967}], "attachments": [{"name": "log", "source": "5d5f1f6a-a81d-494f-91af-81c0c1391a55-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "ee18b33d-3dae-4d33-82d8-d8a2b4f9f084-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "252187a0-6d13-4715-90bb-eacc1c1bec2c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 'task_004', 'name': '所需信息未选择', 'method': 'POST', 'url': '/crawler/tasks', 'headers': {'Authorization': ''}, 'json': {'processName': '亚马逊监控', 'asinList': 'B08XJ8J7SZ,B08LGD78Q5', 'platform': 'Amazon', 'timeCycle': 'daily'}, 'expected_code': 403, 'expected_success': False, 'expected_message': '请至少选择一项所需信息'}"}], "start": 1753987109917, "stop": 1753987109968, "uuid": "8efa3a51-5757-4d38-95f0-bc70159142d2", "historyId": "545cc0deaa26c5eebe66b802f8bd69e3", "testCaseId": "d9da2eb06171020188c155aa066adc0e", "fullName": "tests.test_crawler_tasks#test_crawler_tasks", "labels": [{"name": "feature", "value": "爬虫任务模块"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_crawler_tasks"}, {"name": "host", "value": "CYJ"}, {"name": "thread", "value": "24408-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_crawler_tasks"}], "titlePath": ["tests", "test_crawler_tasks.py"]}