{"name": "test_crawler_tasks[case16]", "status": "failed", "statusDetails": {"message": "Failed: 数据分析失败，无法下载PPT", "trace": "case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2Mzk3MTMsImV4cCI6MTc1NDY0NjkxM30.j-6Vn3uO2gWZNV4cIu_kEt6LtUgUFBqjetzLiHB9wa4'\ntask_id = 718\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed"}, "steps": [{"name": "发送请求：'POST' '/crawler/tasks/718/analyze'", "status": "passed", "attachments": [{"name": "请求信息", "source": "e4f85423-b2f0-4237-9931-9a4d690eba07-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "75df6977-1d2d-40c3-a349-9d0f31ebf05d-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "2e6a5635-6fdb-479f-9e42-1b80f80699ca-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "a6bcc39d-3b4b-41c0-af01-9616204c374a-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "f40e2a50-7a38-4e55-a66c-43f0cfdc2d2e-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'POST'"}, {"name": "endpoint", "value": "'/crawler/tasks/718/analyze'"}, {"name": "headers", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2Mzk3MTMsImV4cCI6MTc1NDY0NjkxM30.j-6Vn3uO2gWZNV4cIu_kEt6LtUgUFBqjetzLiHB9wa4'"}], "start": 1754639713915, "stop": 1754639713926}, {"name": "验证响应：状态码200，消息'操作成功'", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "True"}, {"name": "expected_message", "value": "'操作成功'"}, {"name": "is_file", "value": "False"}], "start": 1754639713927, "stop": 1754639713927}, {"name": "发送请求：'GET' '/crawler/tasks/718/analyze/status'", "status": "passed", "attachments": [{"name": "请求信息", "source": "534da1e6-205a-4f07-967f-d3610447c7f2-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "90901095-dd5a-48dc-883f-a04ef8e8fab9-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "bf9b0f5f-07cb-4e93-9ac3-11db0de7d022-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "32211c59-7fed-446b-8e74-bd34bd187a48-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "b9879272-4c10-4b78-a62c-61de22ce3191-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'GET'"}, {"name": "endpoint", "value": "'/crawler/tasks/718/analyze/status'"}, {"name": "headers", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTQ2Mzk3MTMsImV4cCI6MTc1NDY0NjkxM30.j-6Vn3uO2gWZNV4cIu_kEt6LtUgUFBqjetzLiHB9wa4'"}], "start": 1754639713929, "stop": 1754639713939}, {"name": "验证响应：状态码200，消息None", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "None"}, {"name": "expected_message", "value": "None"}, {"name": "is_file", "value": "False"}], "start": 1754639713939, "stop": 1754639713939}], "attachments": [{"name": "测试信息", "source": "61aa608f-d646-4d0a-a580-2094b72ab280-attachment.txt", "type": "text/plain"}, {"name": "前置依赖", "source": "79fd712f-cafe-4254-babf-633ec9b23751-attachment.txt", "type": "text/plain"}, {"name": "前置操作结果", "source": "0c873bd6-b6a1-4297-97b8-c97a0b562810-attachment.txt", "type": "text/plain"}, {"name": "状态轮询", "source": "a725e89d-39a2-4471-b560-b629c561b549-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "cff5fb0b-79aa-4cf5-af16-a59ce9bdc8b4-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "b61a2c99-2ea9-44e8-ae81-bf63d3888665-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c461e74c-5e52-40df-a17d-3816dd7a1ece-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}], "start": 1754639713913, "stop": 1754639713940, "uuid": "537c3ea4-c1a0-412c-8456-59830ec73df0", "historyId": "4b735e98d13c3dfb728e3713b0ef6671", "testCaseId": "d9da2eb06171020188c155aa066adc0e", "fullName": "tests.test_crawler_tasks#test_crawler_tasks", "labels": [{"name": "feature", "value": "爬虫任务模块"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_crawler_tasks"}, {"name": "host", "value": "CYJ"}, {"name": "thread", "value": "28304-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_crawler_tasks"}], "titlePath": ["tests", "test_crawler_tasks.py"]}