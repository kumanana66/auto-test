{"name": "test_crawler_tasks[case16]", "status": "failed", "statusDetails": {"message": "Failed: 数据分析失败，无法下载PPT", "trace": "case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'\ntask_id = 425\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed"}, "steps": [{"name": "发送请求：'POST' '/crawler/tasks/425/analyze'", "status": "passed", "attachments": [{"name": "请求信息", "source": "b1b503c3-283d-4949-bbd7-907bf485e752-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "7c136d25-de75-4b45-b30f-f21113f256f0-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "1e4324e1-4db3-400f-b852-7a69c17954bc-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "b3a8225b-5844-4d7c-9142-354bf70c160f-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "174deebb-2d09-4ae0-9bf4-ef02dd143335-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'POST'"}, {"name": "endpoint", "value": "'/crawler/tasks/425/analyze'"}, {"name": "headers", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'"}], "start": 1753990530222, "stop": 1753990530246}, {"name": "验证响应：状态码200，消息'操作成功'", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "True"}, {"name": "expected_message", "value": "'操作成功'"}, {"name": "is_file", "value": "False"}], "start": 1753990530246, "stop": 1753990530246}, {"name": "发送请求：'GET' '/crawler/tasks/425/analyze/status'", "status": "passed", "attachments": [{"name": "请求信息", "source": "0cd6de3c-5ea6-407a-ac98-92fa73a57967-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "153515f3-ea49-4d1e-87fa-bc793ec055c3-attachment.txt", "type": "text/plain"}, {"name": "请求参数", "source": "67e5e522-f4fa-4b0a-a023-2fde093c0cbe-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "db3c436f-b33e-4808-abab-0f44409e62a8-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "28404798-ad8c-479e-816f-75f5cd3cff6c-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'GET'"}, {"name": "endpoint", "value": "'/crawler/tasks/425/analyze/status'"}, {"name": "headers", "value": "None"}, {"name": "params", "value": "None"}, {"name": "json", "value": "None"}, {"name": "files", "value": "None"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'"}], "start": 1753990530247, "stop": 1753990530259}, {"name": "验证响应：状态码200，消息None", "status": "passed", "parameters": [{"name": "response", "value": "<Response [200]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "None"}, {"name": "expected_message", "value": "None"}, {"name": "is_file", "value": "False"}], "start": 1753990530259, "stop": 1753990530259}], "attachments": [{"name": "测试信息", "source": "8a358ef4-5603-47ff-b985-d78f4819c60a-attachment.txt", "type": "text/plain"}, {"name": "前置依赖", "source": "6d6f59ca-d15f-4c80-aad9-c3bd0116660a-attachment.txt", "type": "text/plain"}, {"name": "前置操作结果", "source": "82aef910-5d98-47fb-a491-6996827b44eb-attachment.txt", "type": "text/plain"}, {"name": "状态轮询", "source": "60f53636-2b3b-4144-9275-0c489e0f814e-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "1d669c89-c030-4477-95f9-c26afcd7307f-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "5cb7076d-d54e-42c1-851d-98e974006ca8-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "1de33ec1-590e-433d-83a8-c9cb8f79cd77-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}], "start": 1753990530219, "stop": 1753990530260, "uuid": "f3b7b003-1ac9-45c9-b0b3-9df9de66c79d", "historyId": "3ad40371da833f813035e3532062b752", "testCaseId": "d9da2eb06171020188c155aa066adc0e", "fullName": "tests.test_crawler_tasks#test_crawler_tasks", "labels": [{"name": "feature", "value": "爬虫任务模块"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_crawler_tasks"}, {"name": "host", "value": "CYJ"}, {"name": "thread", "value": "18756-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_crawler_tasks"}], "titlePath": ["tests", "test_crawler_tasks.py"]}