{"name": "test_user_auth[case25]", "status": "failed", "statusDetails": {"message": "AssertionError: 状态码不符：预期200，实际403\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code", "trace": "case = {'case_id': 'auth_026', 'expected_code': 200, 'expected_content_type': 'application/json', 'expected_success': True, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5NjkwODYsImV4cCI6MTc1Mzk3NjI4Nn0.cTNjCeHqzoi5XTV0ZpQdo6Opq5FpMllqnBSfQlZu7Ko'\nsmall_jpg_image = 'small_8051.jpg'\nlarge_jpg_image = 'large_7680.jpg'\nsmall_png_image = 'small_7355.png'\nlarge_png_image = 'large_9898.png', non_image_file = 'test_9140.txt'\n\n    @allure.feature(\"用户认证模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_user_auth(case, auth_token, small_jpg_image, large_jpg_image, small_png_image, large_png_image, non_image_file):\n        allure.story(case[\"name\"])\n        allure.title(case[\"case_id\"] + \": \" + case[\"name\"])\n    \n        # 文件映射\n        file_map = {\n            \"test_avatar.jpg\": small_jpg_image,\n            \"large_avatar.jpg\": large_jpg_image,\n            \"test_avatar.png\": small_png_image,\n            \"large_avatar.png\": large_png_image,\n            \"test_file.txt\": non_image_file\n        }\n        # 预处理请求\n        request_data = preprocess_request(case, auth_token, file_map)\n    \n        # 测试用例：未登录状态上传头像\n        if case[\"case_id\"] == \"auth_029\":\n            # 移除token，模拟未登录\n            response = Request.send_request(\n                method=case[\"method\"],\n                endpoint=case[\"url\"],\n                files=request_data.get(\"files\"),\n                token=None  # 显式传None，不携带token\n            )\n        else:\n            # 发送请求\n            response = Request.send_request(\n                method=case[\"method\"],\n                endpoint=case[\"url\"],\n                json=request_data.get(\"json\"),\n                params=request_data.get(\"params\"),\n                headers=request_data.get(\"headers\"),\n                files=request_data.get(\"files\"),\n                token=auth_token\n            )\n    \n        # 断言\n>       assert_response(\n            response,\n            expected_code=case[\"expected_code\"],\n            expected_success=case.get(\"expected_success\"),\n            expected_message=case.get(\"expected_message\")\n        )\n\ntests\\test_user_auth.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>, expected_code = 200\nexpected_success = True, expected_message = None\n\n    @allure.step(\"验证响应：状态码{expected_code}，消息{expected_message}\")\n    def assert_response(response, expected_code, expected_success=None, expected_message=None):\n        \"\"\"验证响应结果\"\"\"\n>       assert response.status_code == expected_code, \\\n            f\"状态码不符：预期{expected_code}，实际{response.status_code}\"\nE       AssertionError: 状态码不符：预期200，实际403\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\nutils\\test_utils.py:7: AssertionError"}, "steps": [{"name": "发送请求：'POST' '/auth/upload/avatar'", "status": "passed", "attachments": [{"name": "请求信息", "source": "403cd49b-d321-45e7-8893-91324ee694e2-attachment.json", "type": "application/json"}, {"name": "响应信息", "source": "030b5482-76b8-4470-953b-ee7ddc69eb2d-attachment.txt", "type": "text/plain"}, {"name": "响应体", "source": "e050efd6-9b3a-439d-8aee-8edac7abedf8-attachment.json", "type": "application/json"}], "parameters": [{"name": "method", "value": "'POST'"}, {"name": "endpoint", "value": "'/auth/upload/avatar'"}, {"name": "headers", "value": "{'Authorization': 'Bearer ', 'Content-Type': 'multipart/form-data'}"}, {"name": "params", "value": "{}"}, {"name": "json", "value": "{}"}, {"name": "files", "value": "{'file': <_io.BufferedReader name='small_7355.png'>}"}, {"name": "token", "value": "'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5NjkwODYsImV4cCI6MTc1Mzk3NjI4Nn0.cTNjCeHqzoi5XTV0ZpQdo6Opq5FpMllqnBSfQlZu7Ko'"}], "start": 1753969143552, "stop": 1753969143584}, {"name": "验证响应：状态码200，消息None", "status": "failed", "statusDetails": {"message": "AssertionError: 状态码不符：预期200，实际403\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code\n", "trace": "  File \"D:\\Anaconda3\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\工作记录\\项目说明\\api_test\\utils\\test_utils.py\", line 7, in assert_response\n    assert response.status_code == expected_code, \\\n"}, "parameters": [{"name": "response", "value": "<Response [403]>"}, {"name": "expected_code", "value": "200"}, {"name": "expected_success", "value": "True"}, {"name": "expected_message", "value": "None"}], "start": 1753969143584, "stop": 1753969143585}], "parameters": [{"name": "case", "value": "{'case_id': 'auth_026', 'name': '上传2MB以内的PNG图片', 'method': 'POST', 'url': '/auth/upload/avatar', 'headers': {'Authorization': 'Bearer ', 'Content-Type': 'multipart/form-data'}, 'files': {'file': 'test_avatar.png'}, 'expected_code': 200, 'expected_success': True, 'expected_content_type': 'application/json'}"}], "start": 1753969143550, "stop": 1753969143589, "uuid": "4af0aa6c-f05d-4556-a59d-6d229712aee5", "historyId": "e36a813ee64f39be5e678bd480dc6721", "testCaseId": "de18b51a986ebd96b4485f2c6341275e", "fullName": "tests.test_user_auth#test_user_auth", "labels": [{"name": "feature", "value": "用户认证模块"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_user_auth"}, {"name": "host", "value": "CYJ"}, {"name": "thread", "value": "17956-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_auth"}], "titlePath": ["tests", "test_user_auth.py"]}