{"uid":"7a28a3c308886f93","name":"test_crawler_tasks[case16]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"3ad40371da833f813035e3532062b752","time":{"start":1753990530219,"stop":1753990530260,"duration":41},"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'\ntask_id = 425\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753990530010,"stop":1753990530189,"duration":179},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753990530011,"stop":1753990530189,"duration":178},"status":"passed","steps":[],"attachments":[{"uid":"ec26e647207a2e4d","name":"请求信息","source":"ec26e647207a2e4d.txt","type":"text/plain","size":41},{"uid":"28d50f2e237c7737","name":"请求头","source":"28d50f2e237c7737.txt","type":"text/plain","size":45},{"uid":"b64c24d307210f20","name":"请求参数","source":"b64c24d307210f20.json","type":"application/json","size":58},{"uid":"ce0f642d2145efcd","name":"响应信息","source":"ce0f642d2145efcd.txt","type":"text/plain","size":14},{"uid":"3ad4cc71e41144dd","name":"响应体","source":"3ad4cc71e41144dd.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"task_id","time":{"start":1753990530189,"stop":1753990530219,"duration":30},"status":"passed","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753990530189,"stop":1753990530219,"duration":30},"status":"passed","steps":[],"attachments":[{"uid":"f89320df9652f498","name":"请求信息","source":"f89320df9652f498.txt","type":"text/plain","size":44},{"uid":"c3b826622713ece","name":"请求头","source":"c3b826622713ece.txt","type":"text/plain","size":209},{"uid":"e4f3e3916933013c","name":"请求参数","source":"e4f3e3916933013c.json","type":"application/json","size":141},{"uid":"800ac1cd9589c9b0","name":"响应信息","source":"800ac1cd9589c9b0.txt","type":"text/plain","size":14},{"uid":"30be330bc5791dc","name":"响应体","source":"30be330bc5791dc.json","type":"application/json","size":326}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务_None', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990530219,"stop":1753990530219,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2}],"testStage":{"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'\ntask_id = 425\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","steps":[{"name":"发送请求：'POST' '/crawler/tasks/425/analyze'","time":{"start":1753990530222,"stop":1753990530246,"duration":24},"status":"passed","steps":[],"attachments":[{"uid":"c54ba46c3487ae4f","name":"请求信息","source":"c54ba46c3487ae4f.txt","type":"text/plain","size":56},{"uid":"adb5d400b88ae517","name":"请求头","source":"adb5d400b88ae517.txt","type":"text/plain","size":209},{"uid":"88a53633b9d5c4d3","name":"请求参数","source":"88a53633b9d5c4d3.json","type":"application/json","size":12},{"uid":"cc74ce798722d1f2","name":"响应信息","source":"cc74ce798722d1f2.txt","type":"text/plain","size":14},{"uid":"1773de6a0b0b1f3d","name":"响应体","source":"1773de6a0b0b1f3d.json","type":"application/json","size":72}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/425/analyze'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'操作成功'","time":{"start":1753990530246,"stop":1753990530246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'操作成功'"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'GET' '/crawler/tasks/425/analyze/status'","time":{"start":1753990530247,"stop":1753990530259,"duration":12},"status":"passed","steps":[],"attachments":[{"uid":"2794ce2634075881","name":"请求信息","source":"2794ce2634075881.txt","type":"text/plain","size":63},{"uid":"892a67788f100f8d","name":"请求头","source":"892a67788f100f8d.txt","type":"text/plain","size":209},{"uid":"8c46d14b08a311db","name":"请求参数","source":"8c46d14b08a311db.json","type":"application/json","size":12},{"uid":"48c5cdd476f3d1fd","name":"响应信息","source":"48c5cdd476f3d1fd.txt","type":"text/plain","size":14},{"uid":"933e203e9a4140f5","name":"响应体","source":"933e203e9a4140f5.json","type":"application/json","size":63}],"parameters":[{"name":"method","value":"'GET'"},{"name":"endpoint","value":"'/crawler/tasks/425/analyze/status'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990530259,"stop":1753990530259,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"None"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"548ed73732585be6","name":"测试信息","source":"548ed73732585be6.txt","type":"text/plain","size":19},{"uid":"a5d1c15028e65b90","name":"前置依赖","source":"a5d1c15028e65b90.txt","type":"text/plain","size":48},{"uid":"105be9d83cb4b483","name":"前置操作结果","source":"105be9d83cb4b483.txt","type":"text/plain","size":21},{"uid":"1e4fd266eb776897","name":"状态轮询","source":"1e4fd266eb776897.txt","type":"text/plain","size":39},{"uid":"cda2010587064a60","name":"log","source":"cda2010587064a60.txt","type":"text/plain","size":3318},{"uid":"f5e9acc8e2f84663","name":"stdout","source":"f5e9acc8e2f84663.txt","type":"text/plain","size":183},{"uid":"8d633db024196e3a","name":"stderr","source":"8d633db024196e3a.txt","type":"text/plain","size":2671}],"parameters":[],"attachmentsCount":17,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":4},"afterStages":[{"name":"task_id::0","time":{"start":1753990530271,"stop":1753990530288,"duration":17},"status":"passed","steps":[{"name":"发送请求：'DELETE' '/crawler/tasks/425'","time":{"start":1753990530272,"stop":1753990530288,"duration":16},"status":"passed","steps":[],"attachments":[{"uid":"71c75cb276cfe827","name":"请求信息","source":"71c75cb276cfe827.txt","type":"text/plain","size":48},{"uid":"6545afdcf45e3d36","name":"请求头","source":"6545afdcf45e3d36.txt","type":"text/plain","size":209},{"uid":"9bca35f0abed59d1","name":"请求参数","source":"9bca35f0abed59d1.json","type":"application/json","size":12},{"uid":"bc43f8d69e36d65a","name":"响应信息","source":"bc43f8d69e36d65a.txt","type":"text/plain","size":14},{"uid":"9e910847732fba5","name":"响应体","source":"9e910847732fba5.json","type":"application/json","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/crawler/tasks/425'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1MzAsImV4cCI6MTc1Mzk5NzczMH0.4GLBaAnr6bHa1GpgCL_HPT0Wf4K7IRx7PNpOxsRuGMw'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"18756-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"7a28a3c308886f93.json","parameterValues":["{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"]}