{"uid":"c5420f9855848ba0","name":"test_crawler_tasks[case16]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"95192499277015bd795c0c272c6b74f5","time":{"start":1753990574707,"stop":1753990574762,"duration":55},"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1NzQsImV4cCI6MTc1Mzk5Nzc3NH0.XlZGjhDq6oSlXp34OK2khz2pqFP03X95Nj8ixuuhcOA'\ntask_id = 447\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753990574554,"stop":1753990574670,"duration":116},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753990574555,"stop":1753990574669,"duration":114},"status":"passed","steps":[],"attachments":[{"uid":"cde8046510be0f4a","name":"请求信息","source":"cde8046510be0f4a.txt","type":"text/plain","size":41},{"uid":"e8590a0b839c407f","name":"请求头","source":"e8590a0b839c407f.txt","type":"text/plain","size":45},{"uid":"f229943f43b67fad","name":"请求参数","source":"f229943f43b67fad.json","type":"application/json","size":58},{"uid":"ae11cac132b195d2","name":"响应信息","source":"ae11cac132b195d2.txt","type":"text/plain","size":14},{"uid":"aa489ec106a12502","name":"响应体","source":"aa489ec106a12502.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"task_id","time":{"start":1753990574670,"stop":1753990574706,"duration":36},"status":"passed","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753990574670,"stop":1753990574706,"duration":36},"status":"passed","steps":[],"attachments":[{"uid":"e56b4dada17e6a9a","name":"请求信息","source":"e56b4dada17e6a9a.txt","type":"text/plain","size":44},{"uid":"75da09509253795e","name":"请求头","source":"75da09509253795e.txt","type":"text/plain","size":209},{"uid":"d775ce3715da3f14","name":"请求参数","source":"d775ce3715da3f14.json","type":"application/json","size":141},{"uid":"64b40630955ea073","name":"响应信息","source":"64b40630955ea073.txt","type":"text/plain","size":14},{"uid":"1f0cc4ccd68f5779","name":"响应体","source":"1f0cc4ccd68f5779.json","type":"application/json","size":324}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务_None', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1NzQsImV4cCI6MTc1Mzk5Nzc3NH0.XlZGjhDq6oSlXp34OK2khz2pqFP03X95Nj8ixuuhcOA'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990574706,"stop":1753990574706,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2}],"testStage":{"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1NzQsImV4cCI6MTc1Mzk5Nzc3NH0.XlZGjhDq6oSlXp34OK2khz2pqFP03X95Nj8ixuuhcOA'\ntask_id = 447\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","steps":[{"name":"发送请求：'POST' '/crawler/tasks/447/analyze'","time":{"start":1753990574708,"stop":1753990574733,"duration":25},"status":"passed","steps":[],"attachments":[{"uid":"cd6d84483b671522","name":"请求信息","source":"cd6d84483b671522.txt","type":"text/plain","size":56},{"uid":"7cca6dad8f51cf91","name":"请求头","source":"7cca6dad8f51cf91.txt","type":"text/plain","size":209},{"uid":"478f38647abecaf1","name":"请求参数","source":"478f38647abecaf1.json","type":"application/json","size":12},{"uid":"5cfe47e9879e47e","name":"响应信息","source":"5cfe47e9879e47e.txt","type":"text/plain","size":14},{"uid":"b6a3d26f1e74822b","name":"响应体","source":"b6a3d26f1e74822b.json","type":"application/json","size":72}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/447/analyze'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1NzQsImV4cCI6MTc1Mzk5Nzc3NH0.XlZGjhDq6oSlXp34OK2khz2pqFP03X95Nj8ixuuhcOA'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'操作成功'","time":{"start":1753990574733,"stop":1753990574733,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'操作成功'"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'GET' '/crawler/tasks/447/analyze/status'","time":{"start":1753990574734,"stop":1753990574761,"duration":27},"status":"passed","steps":[],"attachments":[{"uid":"41bb5bf26da71216","name":"请求信息","source":"41bb5bf26da71216.txt","type":"text/plain","size":63},{"uid":"6c9509340ca290d2","name":"请求头","source":"6c9509340ca290d2.txt","type":"text/plain","size":209},{"uid":"107dfb63178f6687","name":"请求参数","source":"107dfb63178f6687.json","type":"application/json","size":12},{"uid":"d479b5be41c98164","name":"响应信息","source":"d479b5be41c98164.txt","type":"text/plain","size":14},{"uid":"1d253ebfbd87ae95","name":"响应体","source":"1d253ebfbd87ae95.json","type":"application/json","size":63}],"parameters":[{"name":"method","value":"'GET'"},{"name":"endpoint","value":"'/crawler/tasks/447/analyze/status'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1NzQsImV4cCI6MTc1Mzk5Nzc3NH0.XlZGjhDq6oSlXp34OK2khz2pqFP03X95Nj8ixuuhcOA'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990574761,"stop":1753990574761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"None"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"ce3c8e45355a46d3","name":"测试信息","source":"ce3c8e45355a46d3.txt","type":"text/plain","size":19},{"uid":"4d41dd4be81441ab","name":"前置依赖","source":"4d41dd4be81441ab.txt","type":"text/plain","size":48},{"uid":"575d02d7b9c394b0","name":"前置操作结果","source":"575d02d7b9c394b0.txt","type":"text/plain","size":21},{"uid":"a975fa4915319b75","name":"状态轮询","source":"a975fa4915319b75.txt","type":"text/plain","size":39},{"uid":"12ddd2ca3f4fcdc","name":"log","source":"12ddd2ca3f4fcdc.txt","type":"text/plain","size":3316},{"uid":"2d401135fb355c65","name":"stdout","source":"2d401135fb355c65.txt","type":"text/plain","size":183},{"uid":"45aed4c346109490","name":"stderr","source":"45aed4c346109490.txt","type":"text/plain","size":2669}],"parameters":[],"attachmentsCount":17,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":4},"afterStages":[{"name":"task_id::0","time":{"start":1753990574770,"stop":1753990574788,"duration":18},"status":"passed","steps":[{"name":"发送请求：'DELETE' '/crawler/tasks/447'","time":{"start":1753990574771,"stop":1753990574788,"duration":17},"status":"passed","steps":[],"attachments":[{"uid":"c96dce17808eca19","name":"请求信息","source":"c96dce17808eca19.txt","type":"text/plain","size":48},{"uid":"bf1f476ef1111a6b","name":"请求头","source":"bf1f476ef1111a6b.txt","type":"text/plain","size":209},{"uid":"d9905c828aebe320","name":"请求参数","source":"d9905c828aebe320.json","type":"application/json","size":12},{"uid":"651672dbea2d70c","name":"响应信息","source":"651672dbea2d70c.txt","type":"text/plain","size":14},{"uid":"b2ab849036ed174b","name":"响应体","source":"b2ab849036ed174b.json","type":"application/json","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/crawler/tasks/447'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA1NzQsImV4cCI6MTc1Mzk5Nzc3NH0.XlZGjhDq6oSlXp34OK2khz2pqFP03X95Nj8ixuuhcOA'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"27800-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"c5420f9855848ba0.json","parameterValues":["{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"]}