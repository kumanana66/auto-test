{"uid":"5f1e1197e3c15ef5","name":"test_crawler_tasks[case16]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"90963e5d89aaf203e5b6c029bd044158","time":{"start":1753989279353,"stop":1753989279394,"duration":41},"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODkyNzksImV4cCI6MTc1Mzk5NjQ3OX0.APTbI4XAsuLOyy0oHVsNWp7UAScjTuxtBi-MtWY9_lo'\ntask_id = 337\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753989279183,"stop":1753989279326,"duration":143},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753989279184,"stop":1753989279326,"duration":142},"status":"passed","steps":[],"attachments":[{"uid":"d50cded57016f14c","name":"请求信息","source":"d50cded57016f14c.txt","type":"text/plain","size":41},{"uid":"8b8918854b67472","name":"请求头","source":"8b8918854b67472.txt","type":"text/plain","size":45},{"uid":"5b9aeb9f83c7c5b0","name":"请求参数","source":"5b9aeb9f83c7c5b0.json","type":"application/json","size":58},{"uid":"c4b8e5fc2aca1940","name":"响应信息","source":"c4b8e5fc2aca1940.txt","type":"text/plain","size":14},{"uid":"6b25e84df6d7b891","name":"响应体","source":"6b25e84df6d7b891.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"task_id","time":{"start":1753989279328,"stop":1753989279351,"duration":23},"status":"passed","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753989279328,"stop":1753989279349,"duration":21},"status":"passed","steps":[],"attachments":[{"uid":"5a93f8b4337dc5c1","name":"请求信息","source":"5a93f8b4337dc5c1.txt","type":"text/plain","size":44},{"uid":"16e63af4a177e24f","name":"请求头","source":"16e63af4a177e24f.txt","type":"text/plain","size":209},{"uid":"f9ff2e87b8d203d1","name":"请求参数","source":"f9ff2e87b8d203d1.json","type":"application/json","size":141},{"uid":"6248b6a6f2114f27","name":"响应信息","source":"6248b6a6f2114f27.txt","type":"text/plain","size":14},{"uid":"2c15c45e9b8144ab","name":"响应体","source":"2c15c45e9b8144ab.json","type":"application/json","size":324}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务_None', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODkyNzksImV4cCI6MTc1Mzk5NjQ3OX0.APTbI4XAsuLOyy0oHVsNWp7UAScjTuxtBi-MtWY9_lo'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753989279351,"stop":1753989279351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2}],"testStage":{"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODkyNzksImV4cCI6MTc1Mzk5NjQ3OX0.APTbI4XAsuLOyy0oHVsNWp7UAScjTuxtBi-MtWY9_lo'\ntask_id = 337\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","steps":[{"name":"发送请求：'POST' '/crawler/tasks/337/analyze'","time":{"start":1753989279355,"stop":1753989279379,"duration":24},"status":"passed","steps":[],"attachments":[{"uid":"d6bc41a4ff6d376f","name":"请求信息","source":"d6bc41a4ff6d376f.txt","type":"text/plain","size":56},{"uid":"8eae3f57d983816b","name":"请求头","source":"8eae3f57d983816b.txt","type":"text/plain","size":209},{"uid":"c81fb81d3a36bef","name":"请求参数","source":"c81fb81d3a36bef.json","type":"application/json","size":12},{"uid":"661695645b16e46b","name":"响应信息","source":"661695645b16e46b.txt","type":"text/plain","size":14},{"uid":"ad6b40cc13782c15","name":"响应体","source":"ad6b40cc13782c15.json","type":"application/json","size":72}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/337/analyze'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODkyNzksImV4cCI6MTc1Mzk5NjQ3OX0.APTbI4XAsuLOyy0oHVsNWp7UAScjTuxtBi-MtWY9_lo'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'操作成功'","time":{"start":1753989279379,"stop":1753989279379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'操作成功'"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'GET' '/crawler/tasks/337/analyze/status'","time":{"start":1753989279380,"stop":1753989279393,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"7aaab0964f4ae3b4","name":"请求信息","source":"7aaab0964f4ae3b4.txt","type":"text/plain","size":63},{"uid":"3e64420353c0e291","name":"请求头","source":"3e64420353c0e291.txt","type":"text/plain","size":209},{"uid":"de5b52392d3690a3","name":"请求参数","source":"de5b52392d3690a3.json","type":"application/json","size":12},{"uid":"aa07c9870091e7aa","name":"响应信息","source":"aa07c9870091e7aa.txt","type":"text/plain","size":14},{"uid":"9d840df4b3dbf6e8","name":"响应体","source":"9d840df4b3dbf6e8.json","type":"application/json","size":63}],"parameters":[{"name":"method","value":"'GET'"},{"name":"endpoint","value":"'/crawler/tasks/337/analyze/status'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODkyNzksImV4cCI6MTc1Mzk5NjQ3OX0.APTbI4XAsuLOyy0oHVsNWp7UAScjTuxtBi-MtWY9_lo'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753989279393,"stop":1753989279393,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"None"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"d16e7550c3b7ed88","name":"测试信息","source":"d16e7550c3b7ed88.txt","type":"text/plain","size":19},{"uid":"46fb31779deb7d2f","name":"前置依赖","source":"46fb31779deb7d2f.txt","type":"text/plain","size":48},{"uid":"faea5a1fff5d8a26","name":"前置操作结果","source":"faea5a1fff5d8a26.txt","type":"text/plain","size":21},{"uid":"1dea82157a12f4f2","name":"状态轮询","source":"1dea82157a12f4f2.txt","type":"text/plain","size":39},{"uid":"52aea8b3687c1163","name":"log","source":"52aea8b3687c1163.txt","type":"text/plain","size":3316},{"uid":"dfc5a524517e099c","name":"stdout","source":"dfc5a524517e099c.txt","type":"text/plain","size":183},{"uid":"52112274f4eecefe","name":"stderr","source":"52112274f4eecefe.txt","type":"text/plain","size":2669}],"parameters":[],"attachmentsCount":17,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":4},"afterStages":[{"name":"task_id::0","time":{"start":1753989279401,"stop":1753989279423,"duration":22},"status":"passed","steps":[{"name":"发送请求：'DELETE' '/crawler/tasks/337'","time":{"start":1753989279401,"stop":1753989279423,"duration":22},"status":"passed","steps":[],"attachments":[{"uid":"7e1be882c15d269d","name":"请求信息","source":"7e1be882c15d269d.txt","type":"text/plain","size":48},{"uid":"a688c89c1499c569","name":"请求头","source":"a688c89c1499c569.txt","type":"text/plain","size":209},{"uid":"f88fe001d5b21c0c","name":"请求参数","source":"f88fe001d5b21c0c.json","type":"application/json","size":12},{"uid":"2dc83577a9f23031","name":"响应信息","source":"2dc83577a9f23031.txt","type":"text/plain","size":14},{"uid":"423774a8d13ff3ca","name":"响应体","source":"423774a8d13ff3ca.json","type":"application/json","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/crawler/tasks/337'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODkyNzksImV4cCI6MTc1Mzk5NjQ3OX0.APTbI4XAsuLOyy0oHVsNWp7UAScjTuxtBi-MtWY9_lo'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"2784-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"5f1e1197e3c15ef5.json","parameterValues":["{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"]}