{"uid":"179314b3b8b856af","name":"test_user_auth[case4]","fullName":"tests.test_user_auth#test_user_auth","historyId":"ce8d10ef494aa87907918ce2059215bd","time":{"start":1753989280816,"stop":1753989280816,"duration":0},"status":"failed","statusMessage":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@pytest.fixture(scope=\"function\")\n    def test_user():\n        \"\"\"创建测试用户\"\"\"\n        username = \"test_\" + ''.join(random.choices(string.ascii_lowercase, k=6))\n        email = f\"{username}@example.com\"\n        password = \"Test123456\"\n    \n        # 发送验证码并断言成功\n        send_response = Request.send_request(\n            \"POST\", \"/auth/send-verify-code\",\n            params={\"email\": email}\n        )\n>       assert send_response.status_code == 200, f\"发送验证码失败: {send_response.text}\"\nE       AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\conftest.py:128: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"test_user","time":{"start":1753989280817,"stop":1753989281064,"duration":247},"status":"failed","statusMessage":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n","statusTrace":"  File \"D:\\Anaconda3\\Lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Anaconda3\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Anaconda3\\Lib\\site-packages\\_pytest\\fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"D:\\工作记录\\项目说明\\api_test\\tests\\conftest.py\", line 128, in test_user\n    assert send_response.status_code == 200, f\"发送验证码失败: {send_response.text}\"\n","steps":[{"name":"发送请求：'POST' '/auth/send-verify-code'","time":{"start":1753989280817,"stop":1753989281064,"duration":247},"status":"passed","steps":[],"attachments":[{"uid":"fbe016fc1a8847db","name":"请求信息","source":"fbe016fc1a8847db.txt","type":"text/plain","size":52},{"uid":"c9697aba353e4c5b","name":"请求头","source":"c9697aba353e4c5b.txt","type":"text/plain","size":45},{"uid":"bdbf85e0e46da65","name":"请求参数","source":"bdbf85e0e46da65.json","type":"application/json","size":44},{"uid":"645cbb6dbcbffb67","name":"响应信息","source":"645cbb6dbcbffb67.txt","type":"text/plain","size":14},{"uid":"12755abead43ee24","name":"响应体","source":"12755abead43ee24.json","type":"application/json","size":81}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/send-verify-code'"},{"name":"headers","value":"None"},{"name":"params","value":"{'email': 'test_jpuxvj@example.com'}"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"testStage":{"status":"failed","statusMessage":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@pytest.fixture(scope=\"function\")\n    def test_user():\n        \"\"\"创建测试用户\"\"\"\n        username = \"test_\" + ''.join(random.choices(string.ascii_lowercase, k=6))\n        email = f\"{username}@example.com\"\n        password = \"Test123456\"\n    \n        # 发送验证码并断言成功\n        send_response = Request.send_request(\n            \"POST\", \"/auth/send-verify-code\",\n            params={\"email\": email}\n        )\n>       assert send_response.status_code == 200, f\"发送验证码失败: {send_response.text}\"\nE       AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\conftest.py:128: AssertionError","steps":[],"attachments":[{"uid":"3d5cea31871aeaa5","name":"log","source":"3d5cea31871aeaa5.txt","type":"text/plain","size":407},{"uid":"ea0aa4f2490a87ed","name":"stderr","source":"ea0aa4f2490a87ed.txt","type":"text/plain","size":300}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[],"labels":[{"name":"feature","value":"用户认证模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_user_auth"},{"name":"host","value":"CYJ"},{"name":"thread","value":"2784-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_user_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'auth_005', 'name': '用户名长度超过20位', 'method': 'POST', 'url': '/auth/register', 'json': {'username': 'test00000000000000001', 'password': 'Test123456', 'email': 'test_zkv3as@example.com', 'verifyCode': '{verify_code}'}, 'expected_code': 400, 'expected_success': False, 'expected_message': '用户名长度需在6-20位之间'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"179314b3b8b856af.json","parameterValues":["{'case_id': 'auth_005', 'name': '用户名长度超过20位', 'method': 'POST', 'url': '/auth/register', 'json': {'username': 'test00000000000000001', 'password': 'Test123456', 'email': 'test_zkv3as@example.com', 'verifyCode': '{verify_code}'}, 'expected_code': 400, 'expected_success': False, 'expected_message': '用户名长度需在6-20位之间'}"]}