{"uid":"6b2271969d38115","name":"test_crawler_tasks[case16]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"7cef792b19e70f2cb867f378e9aca28f","time":{"start":1753990149644,"stop":1753990149671,"duration":27},"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAxNDksImV4cCI6MTc1Mzk5NzM0OX0.8pgkWY-OqGG6k3uvxa_AN0MEx3pahyPgf2p4_6x7NIQ'\ntask_id = 381\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753990149511,"stop":1753990149627,"duration":116},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753990149512,"stop":1753990149627,"duration":115},"status":"passed","steps":[],"attachments":[{"uid":"5b964516aa576807","name":"请求信息","source":"5b964516aa576807.txt","type":"text/plain","size":41},{"uid":"c308af226fabfb1a","name":"请求头","source":"c308af226fabfb1a.txt","type":"text/plain","size":45},{"uid":"3f78c149d9e63a00","name":"请求参数","source":"3f78c149d9e63a00.json","type":"application/json","size":58},{"uid":"91f870f607da0ff0","name":"响应信息","source":"91f870f607da0ff0.txt","type":"text/plain","size":14},{"uid":"a23bb066e58fb211","name":"响应体","source":"a23bb066e58fb211.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"task_id","time":{"start":1753990149627,"stop":1753990149643,"duration":16},"status":"passed","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753990149628,"stop":1753990149643,"duration":15},"status":"passed","steps":[],"attachments":[{"uid":"50c2f71a2729cf71","name":"请求信息","source":"50c2f71a2729cf71.txt","type":"text/plain","size":44},{"uid":"d52ec6089ea91b9","name":"请求头","source":"d52ec6089ea91b9.txt","type":"text/plain","size":209},{"uid":"7487f8f93fe82caa","name":"请求参数","source":"7487f8f93fe82caa.json","type":"application/json","size":141},{"uid":"1ae3b1a34abed480","name":"响应信息","source":"1ae3b1a34abed480.txt","type":"text/plain","size":14},{"uid":"59e2da62d4932dca","name":"响应体","source":"59e2da62d4932dca.json","type":"application/json","size":326}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务_None', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAxNDksImV4cCI6MTc1Mzk5NzM0OX0.8pgkWY-OqGG6k3uvxa_AN0MEx3pahyPgf2p4_6x7NIQ'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990149643,"stop":1753990149643,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2}],"testStage":{"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAxNDksImV4cCI6MTc1Mzk5NzM0OX0.8pgkWY-OqGG6k3uvxa_AN0MEx3pahyPgf2p4_6x7NIQ'\ntask_id = 381\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","steps":[{"name":"发送请求：'POST' '/crawler/tasks/381/analyze'","time":{"start":1753990149646,"stop":1753990149658,"duration":12},"status":"passed","steps":[],"attachments":[{"uid":"ddd25698943cf0c7","name":"请求信息","source":"ddd25698943cf0c7.txt","type":"text/plain","size":56},{"uid":"a9c59134f5f24151","name":"请求头","source":"a9c59134f5f24151.txt","type":"text/plain","size":209},{"uid":"84bc1d1fd0423111","name":"请求参数","source":"84bc1d1fd0423111.json","type":"application/json","size":12},{"uid":"8a05c2e31055c193","name":"响应信息","source":"8a05c2e31055c193.txt","type":"text/plain","size":14},{"uid":"aca617c651442da6","name":"响应体","source":"aca617c651442da6.json","type":"application/json","size":72}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/381/analyze'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAxNDksImV4cCI6MTc1Mzk5NzM0OX0.8pgkWY-OqGG6k3uvxa_AN0MEx3pahyPgf2p4_6x7NIQ'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'操作成功'","time":{"start":1753990149658,"stop":1753990149658,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'操作成功'"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'GET' '/crawler/tasks/381/analyze/status'","time":{"start":1753990149659,"stop":1753990149669,"duration":10},"status":"passed","steps":[],"attachments":[{"uid":"a4bb0a5dd943f5dd","name":"请求信息","source":"a4bb0a5dd943f5dd.txt","type":"text/plain","size":63},{"uid":"a09fb9ed3cb26810","name":"请求头","source":"a09fb9ed3cb26810.txt","type":"text/plain","size":209},{"uid":"8b8ae3b4cb19e06d","name":"请求参数","source":"8b8ae3b4cb19e06d.json","type":"application/json","size":12},{"uid":"d724428d5ef21288","name":"响应信息","source":"d724428d5ef21288.txt","type":"text/plain","size":14},{"uid":"bdf03538d9637796","name":"响应体","source":"bdf03538d9637796.json","type":"application/json","size":63}],"parameters":[{"name":"method","value":"'GET'"},{"name":"endpoint","value":"'/crawler/tasks/381/analyze/status'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAxNDksImV4cCI6MTc1Mzk5NzM0OX0.8pgkWY-OqGG6k3uvxa_AN0MEx3pahyPgf2p4_6x7NIQ'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990149669,"stop":1753990149669,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"None"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"e3799cd10a0ecf23","name":"测试信息","source":"e3799cd10a0ecf23.txt","type":"text/plain","size":19},{"uid":"450830f8d2816b82","name":"前置依赖","source":"450830f8d2816b82.txt","type":"text/plain","size":48},{"uid":"e048880c40c4777f","name":"前置操作结果","source":"e048880c40c4777f.txt","type":"text/plain","size":21},{"uid":"145e7a892a8e9cb7","name":"状态轮询","source":"145e7a892a8e9cb7.txt","type":"text/plain","size":39},{"uid":"63d70dab5b89e379","name":"log","source":"63d70dab5b89e379.txt","type":"text/plain","size":3318},{"uid":"59f77a5c44338bd2","name":"stdout","source":"59f77a5c44338bd2.txt","type":"text/plain","size":183},{"uid":"25c1637de83d3619","name":"stderr","source":"25c1637de83d3619.txt","type":"text/plain","size":2671}],"parameters":[],"attachmentsCount":17,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":4},"afterStages":[{"name":"task_id::0","time":{"start":1753990149681,"stop":1753990149703,"duration":22},"status":"passed","steps":[{"name":"发送请求：'DELETE' '/crawler/tasks/381'","time":{"start":1753990149681,"stop":1753990149701,"duration":20},"status":"passed","steps":[],"attachments":[{"uid":"3ee7759ff727aff3","name":"请求信息","source":"3ee7759ff727aff3.txt","type":"text/plain","size":48},{"uid":"27290fae13102dcd","name":"请求头","source":"27290fae13102dcd.txt","type":"text/plain","size":209},{"uid":"da9612a51c8068a5","name":"请求参数","source":"da9612a51c8068a5.json","type":"application/json","size":12},{"uid":"a37acf3a3a14c46d","name":"响应信息","source":"a37acf3a3a14c46d.txt","type":"text/plain","size":14},{"uid":"957fcddf07810bc9","name":"响应体","source":"957fcddf07810bc9.json","type":"application/json","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/crawler/tasks/381'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAxNDksImV4cCI6MTc1Mzk5NzM0OX0.8pgkWY-OqGG6k3uvxa_AN0MEx3pahyPgf2p4_6x7NIQ'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"12600-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"6b2271969d38115.json","parameterValues":["{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"]}