{"uid":"f2a10928ebff4e97","name":"test_crawler_tasks[case16]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"5b0d84e606f6e77183bd19d0bf4354f6","time":{"start":1753989650904,"stop":1753989650945,"duration":41},"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODk2NTAsImV4cCI6MTc1Mzk5Njg1MH0.9dOvwIFEZqLaBPDJeF-cxMNBjp83gSSrwyHaBxj_FGw'\ntask_id = 359\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753989650739,"stop":1753989650882,"duration":143},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753989650739,"stop":1753989650882,"duration":143},"status":"passed","steps":[],"attachments":[{"uid":"54e9d32b70012845","name":"请求信息","source":"54e9d32b70012845.txt","type":"text/plain","size":41},{"uid":"c42ad539f77179d","name":"请求头","source":"c42ad539f77179d.txt","type":"text/plain","size":45},{"uid":"8eba5fc70613bddf","name":"请求参数","source":"8eba5fc70613bddf.json","type":"application/json","size":58},{"uid":"e15e8efc40e362e5","name":"响应信息","source":"e15e8efc40e362e5.txt","type":"text/plain","size":14},{"uid":"5b0d39036698f154","name":"响应体","source":"5b0d39036698f154.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"task_id","time":{"start":1753989650883,"stop":1753989650903,"duration":20},"status":"passed","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753989650883,"stop":1753989650903,"duration":20},"status":"passed","steps":[],"attachments":[{"uid":"e85dca90ebb57e1b","name":"请求信息","source":"e85dca90ebb57e1b.txt","type":"text/plain","size":44},{"uid":"f82eccb038007093","name":"请求头","source":"f82eccb038007093.txt","type":"text/plain","size":209},{"uid":"e87852d05ac88b59","name":"请求参数","source":"e87852d05ac88b59.json","type":"application/json","size":141},{"uid":"b289bd57b5c07765","name":"响应信息","source":"b289bd57b5c07765.txt","type":"text/plain","size":14},{"uid":"dd656e41adec36cd","name":"响应体","source":"dd656e41adec36cd.json","type":"application/json","size":326}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务_None', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODk2NTAsImV4cCI6MTc1Mzk5Njg1MH0.9dOvwIFEZqLaBPDJeF-cxMNBjp83gSSrwyHaBxj_FGw'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753989650903,"stop":1753989650903,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2}],"testStage":{"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODk2NTAsImV4cCI6MTc1Mzk5Njg1MH0.9dOvwIFEZqLaBPDJeF-cxMNBjp83gSSrwyHaBxj_FGw'\ntask_id = 359\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","steps":[{"name":"发送请求：'POST' '/crawler/tasks/359/analyze'","time":{"start":1753989650906,"stop":1753989650932,"duration":26},"status":"passed","steps":[],"attachments":[{"uid":"5ad33a8ddd9ca0db","name":"请求信息","source":"5ad33a8ddd9ca0db.txt","type":"text/plain","size":56},{"uid":"44ae8c1b9a8d9225","name":"请求头","source":"44ae8c1b9a8d9225.txt","type":"text/plain","size":209},{"uid":"32d2459082409742","name":"请求参数","source":"32d2459082409742.json","type":"application/json","size":12},{"uid":"bd2a924fff873806","name":"响应信息","source":"bd2a924fff873806.txt","type":"text/plain","size":14},{"uid":"cc49041e7675325d","name":"响应体","source":"cc49041e7675325d.json","type":"application/json","size":72}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/359/analyze'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODk2NTAsImV4cCI6MTc1Mzk5Njg1MH0.9dOvwIFEZqLaBPDJeF-cxMNBjp83gSSrwyHaBxj_FGw'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'操作成功'","time":{"start":1753989650932,"stop":1753989650932,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'操作成功'"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'GET' '/crawler/tasks/359/analyze/status'","time":{"start":1753989650934,"stop":1753989650943,"duration":9},"status":"passed","steps":[],"attachments":[{"uid":"f6e8aacce3ec699d","name":"请求信息","source":"f6e8aacce3ec699d.txt","type":"text/plain","size":63},{"uid":"d69d938c17c2384d","name":"请求头","source":"d69d938c17c2384d.txt","type":"text/plain","size":209},{"uid":"e2da5d474a319253","name":"请求参数","source":"e2da5d474a319253.json","type":"application/json","size":12},{"uid":"ae1e65ba80d290dd","name":"响应信息","source":"ae1e65ba80d290dd.txt","type":"text/plain","size":14},{"uid":"f385109dbbd3bd7f","name":"响应体","source":"f385109dbbd3bd7f.json","type":"application/json","size":63}],"parameters":[{"name":"method","value":"'GET'"},{"name":"endpoint","value":"'/crawler/tasks/359/analyze/status'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODk2NTAsImV4cCI6MTc1Mzk5Njg1MH0.9dOvwIFEZqLaBPDJeF-cxMNBjp83gSSrwyHaBxj_FGw'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753989650943,"stop":1753989650943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"None"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"9ddd4b0e2ae1310a","name":"测试信息","source":"9ddd4b0e2ae1310a.txt","type":"text/plain","size":19},{"uid":"e82b60859972ded0","name":"前置依赖","source":"e82b60859972ded0.txt","type":"text/plain","size":48},{"uid":"7d4a471793f90ba4","name":"前置操作结果","source":"7d4a471793f90ba4.txt","type":"text/plain","size":21},{"uid":"1a181d17f770bb10","name":"状态轮询","source":"1a181d17f770bb10.txt","type":"text/plain","size":39},{"uid":"1a0db7d77430896a","name":"log","source":"1a0db7d77430896a.txt","type":"text/plain","size":3318},{"uid":"26f7ceca87081d3f","name":"stdout","source":"26f7ceca87081d3f.txt","type":"text/plain","size":183},{"uid":"61f02d1f170dc202","name":"stderr","source":"61f02d1f170dc202.txt","type":"text/plain","size":2671}],"parameters":[],"attachmentsCount":17,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":4},"afterStages":[{"name":"task_id::0","time":{"start":1753989650955,"stop":1753989650971,"duration":16},"status":"passed","steps":[{"name":"发送请求：'DELETE' '/crawler/tasks/359'","time":{"start":1753989650955,"stop":1753989650969,"duration":14},"status":"passed","steps":[],"attachments":[{"uid":"b8fea69e7cf1258c","name":"请求信息","source":"b8fea69e7cf1258c.txt","type":"text/plain","size":48},{"uid":"9f5c74d46c156580","name":"请求头","source":"9f5c74d46c156580.txt","type":"text/plain","size":209},{"uid":"a9cd7cf306e16f89","name":"请求参数","source":"a9cd7cf306e16f89.json","type":"application/json","size":12},{"uid":"1f6d11f6c36050e8","name":"响应信息","source":"1f6d11f6c36050e8.txt","type":"text/plain","size":14},{"uid":"87a91227a0c6bc97","name":"响应体","source":"87a91227a0c6bc97.json","type":"application/json","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/crawler/tasks/359'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODk2NTAsImV4cCI6MTc1Mzk5Njg1MH0.9dOvwIFEZqLaBPDJeF-cxMNBjp83gSSrwyHaBxj_FGw'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"14532-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"f2a10928ebff4e97.json","parameterValues":["{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"]}