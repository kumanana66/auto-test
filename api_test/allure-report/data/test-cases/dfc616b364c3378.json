{"uid":"dfc616b364c3378","name":"test_crawler_tasks[case16]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"7e18a3cba1c0f80df40eae82b4d281e8","time":{"start":1753988690155,"stop":1753988690191,"duration":36},"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODg2OTAsImV4cCI6MTc1Mzk5NTg5MH0.NLFH4SRzMDzwnKkFKdD3FF_YI2Y0suvPKSwvbQqjTis'\ntask_id = 315\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753988689959,"stop":1753988690134,"duration":175},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753988689959,"stop":1753988690134,"duration":175},"status":"passed","steps":[],"attachments":[{"uid":"d46a4c9b9473969b","name":"请求信息","source":"d46a4c9b9473969b.txt","type":"text/plain","size":41},{"uid":"8a76f3a556b4552b","name":"请求头","source":"8a76f3a556b4552b.txt","type":"text/plain","size":45},{"uid":"6402f3cbdb97272d","name":"请求参数","source":"6402f3cbdb97272d.json","type":"application/json","size":58},{"uid":"1de98ea463bf4ff0","name":"响应信息","source":"1de98ea463bf4ff0.txt","type":"text/plain","size":14},{"uid":"99cbeee29c997a95","name":"响应体","source":"99cbeee29c997a95.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"task_id","time":{"start":1753988690134,"stop":1753988690154,"duration":20},"status":"passed","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753988690134,"stop":1753988690154,"duration":20},"status":"passed","steps":[],"attachments":[{"uid":"7af91b9b9733d6c8","name":"请求信息","source":"7af91b9b9733d6c8.txt","type":"text/plain","size":44},{"uid":"84428d5cccdc07ba","name":"请求头","source":"84428d5cccdc07ba.txt","type":"text/plain","size":209},{"uid":"d060edabbee7cf22","name":"请求参数","source":"d060edabbee7cf22.json","type":"application/json","size":141},{"uid":"c9a26004e97555e0","name":"响应信息","source":"c9a26004e97555e0.txt","type":"text/plain","size":14},{"uid":"3e81280c82763cc6","name":"响应体","source":"3e81280c82763cc6.json","type":"application/json","size":326}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务_None', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODg2OTAsImV4cCI6MTc1Mzk5NTg5MH0.NLFH4SRzMDzwnKkFKdD3FF_YI2Y0suvPKSwvbQqjTis'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753988690154,"stop":1753988690154,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2}],"testStage":{"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODg2OTAsImV4cCI6MTc1Mzk5NTg5MH0.NLFH4SRzMDzwnKkFKdD3FF_YI2Y0suvPKSwvbQqjTis'\ntask_id = 315\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","steps":[{"name":"发送请求：'POST' '/crawler/tasks/315/analyze'","time":{"start":1753988690159,"stop":1753988690173,"duration":14},"status":"passed","steps":[],"attachments":[{"uid":"427febb641174345","name":"请求信息","source":"427febb641174345.txt","type":"text/plain","size":56},{"uid":"cdedb0b72650c567","name":"请求头","source":"cdedb0b72650c567.txt","type":"text/plain","size":209},{"uid":"bbb09cbce9f665b8","name":"请求参数","source":"bbb09cbce9f665b8.json","type":"application/json","size":12},{"uid":"f1b41fcd28fba816","name":"响应信息","source":"f1b41fcd28fba816.txt","type":"text/plain","size":14},{"uid":"e14027f22351bfee","name":"响应体","source":"e14027f22351bfee.json","type":"application/json","size":72}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/315/analyze'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODg2OTAsImV4cCI6MTc1Mzk5NTg5MH0.NLFH4SRzMDzwnKkFKdD3FF_YI2Y0suvPKSwvbQqjTis'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'操作成功'","time":{"start":1753988690173,"stop":1753988690173,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'操作成功'"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'GET' '/crawler/tasks/315/analyze/status'","time":{"start":1753988690174,"stop":1753988690189,"duration":15},"status":"passed","steps":[],"attachments":[{"uid":"f513c8af0ee550b2","name":"请求信息","source":"f513c8af0ee550b2.txt","type":"text/plain","size":63},{"uid":"9d8f15e462da9300","name":"请求头","source":"9d8f15e462da9300.txt","type":"text/plain","size":209},{"uid":"a4510c46cb32a3f6","name":"请求参数","source":"a4510c46cb32a3f6.json","type":"application/json","size":12},{"uid":"f2d20dfb003e2d53","name":"响应信息","source":"f2d20dfb003e2d53.txt","type":"text/plain","size":14},{"uid":"99627c741527a82e","name":"响应体","source":"99627c741527a82e.json","type":"application/json","size":63}],"parameters":[{"name":"method","value":"'GET'"},{"name":"endpoint","value":"'/crawler/tasks/315/analyze/status'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODg2OTAsImV4cCI6MTc1Mzk5NTg5MH0.NLFH4SRzMDzwnKkFKdD3FF_YI2Y0suvPKSwvbQqjTis'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753988690189,"stop":1753988690189,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"None"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"b4986d7ce50a02b5","name":"测试信息","source":"b4986d7ce50a02b5.txt","type":"text/plain","size":19},{"uid":"bfec4d349813b4a","name":"前置依赖","source":"bfec4d349813b4a.txt","type":"text/plain","size":48},{"uid":"d65ad4d2526e2c78","name":"前置操作结果","source":"d65ad4d2526e2c78.txt","type":"text/plain","size":21},{"uid":"4c6d1be2062c5c18","name":"状态轮询","source":"4c6d1be2062c5c18.txt","type":"text/plain","size":39},{"uid":"2cf5af58dfa39b7b","name":"log","source":"2cf5af58dfa39b7b.txt","type":"text/plain","size":3318},{"uid":"1c594acf4e98337e","name":"stdout","source":"1c594acf4e98337e.txt","type":"text/plain","size":183},{"uid":"c5d9684d0ff9e39e","name":"stderr","source":"c5d9684d0ff9e39e.txt","type":"text/plain","size":2671}],"parameters":[],"attachmentsCount":17,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":4},"afterStages":[{"name":"task_id::0","time":{"start":1753988690199,"stop":1753988690219,"duration":20},"status":"passed","steps":[{"name":"发送请求：'DELETE' '/crawler/tasks/315'","time":{"start":1753988690199,"stop":1753988690219,"duration":20},"status":"passed","steps":[],"attachments":[{"uid":"bcdcd83a4f024da6","name":"请求信息","source":"bcdcd83a4f024da6.txt","type":"text/plain","size":48},{"uid":"48edecc70266210a","name":"请求头","source":"48edecc70266210a.txt","type":"text/plain","size":209},{"uid":"fefb045f1f285180","name":"请求参数","source":"fefb045f1f285180.json","type":"application/json","size":12},{"uid":"ed1e590bfe826fac","name":"响应信息","source":"ed1e590bfe826fac.txt","type":"text/plain","size":14},{"uid":"e28850ffdf104238","name":"响应体","source":"e28850ffdf104238.json","type":"application/json","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/crawler/tasks/315'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODg2OTAsImV4cCI6MTc1Mzk5NTg5MH0.NLFH4SRzMDzwnKkFKdD3FF_YI2Y0suvPKSwvbQqjTis'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"20208-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"dfc616b364c3378.json","parameterValues":["{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"]}