{"uid":"e2032ecc15428008","name":"test_user_auth[case21]","fullName":"tests.test_user_auth#test_user_auth","historyId":"e885e4604252cf467f2cf50ad51dd590","time":{"start":1753991297534,"stop":1753991297534,"duration":0},"status":"failed","statusMessage":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@pytest.fixture(scope=\"function\")\n    def test_user():\n        \"\"\"创建测试用户\"\"\"\n        username = \"test_\" + ''.join(random.choices(string.ascii_lowercase, k=6))\n        email = f\"{username}@example.com\"\n        password = \"Test123456\"\n    \n        # 发送验证码并断言成功\n        send_response = Request.send_request(\n            \"POST\", \"/auth/send-verify-code\",\n            params={\"email\": email}\n        )\n>       assert send_response.status_code == 200, f\"发送验证码失败: {send_response.text}\"\nE       AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\conftest.py:128: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":11,"retriesStatusChange":false,"beforeStages":[{"name":"test_user","time":{"start":1753991297535,"stop":1753991297888,"duration":353},"status":"failed","statusMessage":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n","statusTrace":"  File \"D:\\Anaconda3\\Lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Anaconda3\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\Anaconda3\\Lib\\site-packages\\_pytest\\fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"D:\\工作记录\\项目说明\\api_test\\tests\\conftest.py\", line 128, in test_user\n    assert send_response.status_code == 200, f\"发送验证码失败: {send_response.text}\"\n","steps":[{"name":"发送请求：'POST' '/auth/send-verify-code'","time":{"start":1753991297535,"stop":1753991297888,"duration":353},"status":"passed","steps":[],"attachments":[{"uid":"60f389f7074329cf","name":"请求信息","source":"60f389f7074329cf.txt","type":"text/plain","size":52},{"uid":"25498a275165d5b","name":"请求头","source":"25498a275165d5b.txt","type":"text/plain","size":45},{"uid":"c7427b2998d46271","name":"请求参数","source":"c7427b2998d46271.json","type":"application/json","size":44},{"uid":"b9bf8ef80246680b","name":"响应信息","source":"b9bf8ef80246680b.txt","type":"text/plain","size":14},{"uid":"84e2dd7fa7a0de79","name":"响应体","source":"84e2dd7fa7a0de79.json","type":"application/json","size":81}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/send-verify-code'"},{"name":"headers","value":"None"},{"name":"params","value":"{'email': 'test_crkmxb@example.com'}"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"testStage":{"status":"failed","statusMessage":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"@pytest.fixture(scope=\"function\")\n    def test_user():\n        \"\"\"创建测试用户\"\"\"\n        username = \"test_\" + ''.join(random.choices(string.ascii_lowercase, k=6))\n        email = f\"{username}@example.com\"\n        password = \"Test123456\"\n    \n        # 发送验证码并断言成功\n        send_response = Request.send_request(\n            \"POST\", \"/auth/send-verify-code\",\n            params={\"email\": email}\n        )\n>       assert send_response.status_code == 200, f\"发送验证码失败: {send_response.text}\"\nE       AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\conftest.py:128: AssertionError","steps":[],"attachments":[{"uid":"fb2d288ab25657aa","name":"log","source":"fb2d288ab25657aa.txt","type":"text/plain","size":407},{"uid":"8c0ec5f318017f74","name":"stderr","source":"8c0ec5f318017f74.txt","type":"text/plain","size":300}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[],"labels":[{"name":"feature","value":"用户认证模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_user_auth"},{"name":"host","value":"CYJ"},{"name":"thread","value":"28060-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_user_auth"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'auth_022', 'name': '旧密码错误', 'method': 'PUT', 'url': '/auth/userinfo', 'headers': {'Authorization': ''}, 'json': {'oldPassword': 'Wrong123', 'newPassword': 'NewTest123', 'securityEmail': 'admin1155@example.com', 'verificationCode': '{verify_code}'}, 'expected_code': 403, 'expected_success': False, 'expected_message': '当前密码不正确'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c0799b02ed0a271b","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753990998575,"stop":1753990998575,"duration":0}},{"uid":"70c11307b15a4187","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753990607416,"stop":1753990607416,"duration":0}},{"uid":"e67da0886861f092","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753990581886,"stop":1753990581886,"duration":0}},{"uid":"825189fa395c18e5","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753990537120,"stop":1753990537120,"duration":0}},{"uid":"d937ed1ceafeadb7","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753990310850,"stop":1753990310850,"duration":0}},{"uid":"29c00dfc3780cb98","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753990156611,"stop":1753990156611,"duration":0}},{"uid":"dbb011f806a011cf","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753989679352,"stop":1753989679352,"duration":0}},{"uid":"30115b20769057fe","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753989286344,"stop":1753989286344,"duration":0}},{"uid":"6a03ffad5046f161","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753988722558,"stop":1753988722558,"duration":0}},{"uid":"8852497aedc11355","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753988269743,"stop":1753988269743,"duration":0}},{"uid":"b00c168b1bd8c746","status":"failed","statusDetails":"AssertionError: 发送验证码失败: {\"success\":false,\"message\":\"发送验证码失败，请稍后重试\",\"data\":null}\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","time":{"start":1753987887132,"stop":1753987887132,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"e2032ecc15428008.json","parameterValues":["{'case_id': 'auth_022', 'name': '旧密码错误', 'method': 'PUT', 'url': '/auth/userinfo', 'headers': {'Authorization': ''}, 'json': {'oldPassword': 'Wrong123', 'newPassword': 'NewTest123', 'securityEmail': 'admin1155@example.com', 'verificationCode': '{verify_code}'}, 'expected_code': 403, 'expected_success': False, 'expected_message': '当前密码不正确'}"]}