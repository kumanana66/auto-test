{"uid":"71556689ef445426","name":"test_crawler_tasks[case16]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"2c56e185d44ff56405eb7d1ecb7b82c3","time":{"start":1753990600401,"stop":1753990600427,"duration":26},"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA2MDAsImV4cCI6MTc1Mzk5NzgwMH0.SijnbAvWMM9N6BbZ2ahKSYJge1AegfuBdac0dzNUyeE'\ntask_id = 469\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753990600251,"stop":1753990600383,"duration":132},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753990600251,"stop":1753990600383,"duration":132},"status":"passed","steps":[],"attachments":[{"uid":"ac01e0e47237a743","name":"请求信息","source":"ac01e0e47237a743.txt","type":"text/plain","size":41},{"uid":"c9315edd7f2f59db","name":"请求头","source":"c9315edd7f2f59db.txt","type":"text/plain","size":45},{"uid":"4fc3e094594be91b","name":"请求参数","source":"4fc3e094594be91b.json","type":"application/json","size":58},{"uid":"5f8093039d541f00","name":"响应信息","source":"5f8093039d541f00.txt","type":"text/plain","size":14},{"uid":"8194cdcf8738e416","name":"响应体","source":"8194cdcf8738e416.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"task_id","time":{"start":1753990600383,"stop":1753990600401,"duration":18},"status":"passed","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753990600383,"stop":1753990600400,"duration":17},"status":"passed","steps":[],"attachments":[{"uid":"3ab221d3df26ffa9","name":"请求信息","source":"3ab221d3df26ffa9.txt","type":"text/plain","size":44},{"uid":"85d4c848a4babbf5","name":"请求头","source":"85d4c848a4babbf5.txt","type":"text/plain","size":209},{"uid":"fbfdd92897e0067c","name":"请求参数","source":"fbfdd92897e0067c.json","type":"application/json","size":141},{"uid":"1ad743426bf688b8","name":"响应信息","source":"1ad743426bf688b8.txt","type":"text/plain","size":14},{"uid":"460545e476dce150","name":"响应体","source":"460545e476dce150.json","type":"application/json","size":326}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务_None', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA2MDAsImV4cCI6MTc1Mzk5NzgwMH0.SijnbAvWMM9N6BbZ2ahKSYJge1AegfuBdac0dzNUyeE'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990600400,"stop":1753990600400,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2}],"testStage":{"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA2MDAsImV4cCI6MTc1Mzk5NzgwMH0.SijnbAvWMM9N6BbZ2ahKSYJge1AegfuBdac0dzNUyeE'\ntask_id = 469\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","steps":[{"name":"发送请求：'POST' '/crawler/tasks/469/analyze'","time":{"start":1753990600402,"stop":1753990600413,"duration":11},"status":"passed","steps":[],"attachments":[{"uid":"91f487b19eb2d9ff","name":"请求信息","source":"91f487b19eb2d9ff.txt","type":"text/plain","size":56},{"uid":"4b11ab41d5867106","name":"请求头","source":"4b11ab41d5867106.txt","type":"text/plain","size":209},{"uid":"b85414835366de08","name":"请求参数","source":"b85414835366de08.json","type":"application/json","size":12},{"uid":"5be5d948e78c898","name":"响应信息","source":"5be5d948e78c898.txt","type":"text/plain","size":14},{"uid":"d1cb646e36ceadc6","name":"响应体","source":"d1cb646e36ceadc6.json","type":"application/json","size":72}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/469/analyze'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA2MDAsImV4cCI6MTc1Mzk5NzgwMH0.SijnbAvWMM9N6BbZ2ahKSYJge1AegfuBdac0dzNUyeE'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'操作成功'","time":{"start":1753990600413,"stop":1753990600413,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'操作成功'"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'GET' '/crawler/tasks/469/analyze/status'","time":{"start":1753990600414,"stop":1753990600426,"duration":12},"status":"passed","steps":[],"attachments":[{"uid":"47d6f69cda934cd5","name":"请求信息","source":"47d6f69cda934cd5.txt","type":"text/plain","size":63},{"uid":"f8fe977a19f38dd","name":"请求头","source":"f8fe977a19f38dd.txt","type":"text/plain","size":209},{"uid":"12cf7313c0a6a847","name":"请求参数","source":"12cf7313c0a6a847.json","type":"application/json","size":12},{"uid":"fa33545e2a57f720","name":"响应信息","source":"fa33545e2a57f720.txt","type":"text/plain","size":14},{"uid":"e2658d98d290a054","name":"响应体","source":"e2658d98d290a054.json","type":"application/json","size":63}],"parameters":[{"name":"method","value":"'GET'"},{"name":"endpoint","value":"'/crawler/tasks/469/analyze/status'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA2MDAsImV4cCI6MTc1Mzk5NzgwMH0.SijnbAvWMM9N6BbZ2ahKSYJge1AegfuBdac0dzNUyeE'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990600426,"stop":1753990600426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"None"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"a1f262551519ca42","name":"测试信息","source":"a1f262551519ca42.txt","type":"text/plain","size":19},{"uid":"cfde35ab8fb66965","name":"前置依赖","source":"cfde35ab8fb66965.txt","type":"text/plain","size":48},{"uid":"8857d9b5a9753789","name":"前置操作结果","source":"8857d9b5a9753789.txt","type":"text/plain","size":21},{"uid":"7649eaedf08d07ab","name":"状态轮询","source":"7649eaedf08d07ab.txt","type":"text/plain","size":39},{"uid":"8c6fcaa062ee937a","name":"log","source":"8c6fcaa062ee937a.txt","type":"text/plain","size":3318},{"uid":"c3b71d1caffbf234","name":"stdout","source":"c3b71d1caffbf234.txt","type":"text/plain","size":183},{"uid":"7469b8d975e9f8f2","name":"stderr","source":"7469b8d975e9f8f2.txt","type":"text/plain","size":2671}],"parameters":[],"attachmentsCount":17,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":4},"afterStages":[{"name":"task_id::0","time":{"start":1753990600434,"stop":1753990600452,"duration":18},"status":"passed","steps":[{"name":"发送请求：'DELETE' '/crawler/tasks/469'","time":{"start":1753990600434,"stop":1753990600452,"duration":18},"status":"passed","steps":[],"attachments":[{"uid":"701db507ffdb8558","name":"请求信息","source":"701db507ffdb8558.txt","type":"text/plain","size":48},{"uid":"4dedd163f3458180","name":"请求头","source":"4dedd163f3458180.txt","type":"text/plain","size":209},{"uid":"c57042b1e5d0afde","name":"请求参数","source":"c57042b1e5d0afde.json","type":"application/json","size":12},{"uid":"54c86b0cf09ef148","name":"响应信息","source":"54c86b0cf09ef148.txt","type":"text/plain","size":14},{"uid":"c784c5ea5dd7f0a7","name":"响应体","source":"c784c5ea5dd7f0a7.json","type":"application/json","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/crawler/tasks/469'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTA2MDAsImV4cCI6MTc1Mzk5NzgwMH0.SijnbAvWMM9N6BbZ2ahKSYJge1AegfuBdac0dzNUyeE'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"71556689ef445426.json","parameterValues":["{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"]}