{"uid":"554a6e039d436193","name":"test_crawler_tasks[case16]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"81b68fff78e0552bbd8986f3987ba76c","time":{"start":1753990299175,"stop":1753990299206,"duration":31},"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAyOTksImV4cCI6MTc1Mzk5NzQ5OX0.Xwa21DHeAsigh3P7bUUhz5hOy92nf8ieD4DKV5ECtQs'\ntask_id = 403\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753990299023,"stop":1753990299155,"duration":132},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753990299023,"stop":1753990299155,"duration":132},"status":"passed","steps":[],"attachments":[{"uid":"5363c4d8277e9d9a","name":"请求信息","source":"5363c4d8277e9d9a.txt","type":"text/plain","size":41},{"uid":"c8fe78e937e2188a","name":"请求头","source":"c8fe78e937e2188a.txt","type":"text/plain","size":45},{"uid":"40873fabe27dcdd9","name":"请求参数","source":"40873fabe27dcdd9.json","type":"application/json","size":58},{"uid":"ecfc6fdfb327c8b0","name":"响应信息","source":"ecfc6fdfb327c8b0.txt","type":"text/plain","size":14},{"uid":"dc4c0d47e09136c4","name":"响应体","source":"dc4c0d47e09136c4.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1},{"name":"task_id","time":{"start":1753990299155,"stop":1753990299174,"duration":19},"status":"passed","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753990299156,"stop":1753990299174,"duration":18},"status":"passed","steps":[],"attachments":[{"uid":"b04eb1d01222917d","name":"请求信息","source":"b04eb1d01222917d.txt","type":"text/plain","size":44},{"uid":"d676870f9ce69da9","name":"请求头","source":"d676870f9ce69da9.txt","type":"text/plain","size":209},{"uid":"1f284b2e79b6794c","name":"请求参数","source":"1f284b2e79b6794c.json","type":"application/json","size":141},{"uid":"eb04a1c5db7665a0","name":"响应信息","source":"eb04a1c5db7665a0.txt","type":"text/plain","size":14},{"uid":"e562a753964f2992","name":"响应体","source":"e562a753964f2992.json","type":"application/json","size":326}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务_None', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAyOTksImV4cCI6MTc1Mzk5NzQ5OX0.Xwa21DHeAsigh3P7bUUhz5hOy92nf8ieD4DKV5ECtQs'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990299174,"stop":1753990299174,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":2}],"testStage":{"status":"failed","statusMessage":"Failed: 数据分析失败，无法下载PPT","statusTrace":"case = {'case_id': 'task_017', 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'headers': {'Authorization': ''}, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAyOTksImV4cCI6MTc1Mzk5NzQ5OX0.Xwa21DHeAsigh3P7bUUhz5hOy92nf8ieD4DKV5ECtQs'\ntask_id = 403\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token, task_id):\n        allure.story(case[\"name\"])\n        allure.title(f\"{case['case_id']}: {case['name']}\")\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n            allure.attach(f\"使用任务ID: {task_id}\", \"测试信息\", allure.attachment_type.TEXT)\n    \n        # --------------------------\n        # 关键修改：处理PPT下载的前置依赖\n        # --------------------------\n        # 1. 若当前是下载PPT的用例（task_017），先启动数据分析并等待完成\n        if case[\"case_id\"] == \"task_017\":\n            allure.attach(\"开始执行数据分析数据分析前置操作\", \"前置依赖\", allure.attachment_type.TEXT)\n    \n            # 1.1 启动数据分析\n            analyze_response = Request.send_request(\n                \"POST\", f\"/crawler/tasks/{task_id}/analyze\",  # 对应task_016的接口\n                token=auth_token\n            )\n            assert_response(\n                analyze_response,\n                200,\n                expected_success=True,\n                expected_message=\"操作成功\"  # 匹配task_016的预期消息\n            )\n            allure.attach(\"数据分析已启动\", \"前置操作结果\", allure.attachment_type.TEXT)\n    \n            # 1.2 轮询等待分析完成（复用同test_download_analyzed_ppt的逻辑）\n            max_wait_seconds = 180\n            check_interval = 5\n            elapsed_seconds = 0\n            status = \"PROCESSING\"\n    \n            while elapsed_seconds < max_wait_seconds and status == \"PROCESSING\":\n                # 查询当前状态\n                status_response = Request.send_request(\n                    \"GET\", f\"/crawler/tasks/{task_id}/analyze/status\",\n                    token=auth_token\n                )\n                assert_response(status_response, 200)\n                status = status_response.json()[\"data\"]\n                allure.attach(f\"当前分析状态: {status} (等待{elapsed_seconds}秒)\", \"状态轮询\", allure.attachment_type.TEXT)\n    \n                if status == \"PROCESSING\":\n                    time.sleep(check_interval)\n                    elapsed_seconds += check_interval\n    \n            # 1.3 校验分析状态（必须完成才能继续下载）\n            assert status in [\"COMPLETED\", \"FAILED\"], f\"数据分析超时，最终状态：{status}\"\n            if status == \"FAILED\":\n>               pytest.fail(\"数据分析失败，无法下载PPT\")  # 分析失败则标记用例失败\nE               Failed: 数据分析失败，无法下载PPT\n\ntests\\test_crawler_tasks.py:88: Failed","steps":[{"name":"发送请求：'POST' '/crawler/tasks/403/analyze'","time":{"start":1753990299177,"stop":1753990299190,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"38d3ca4243d6f974","name":"请求信息","source":"38d3ca4243d6f974.txt","type":"text/plain","size":56},{"uid":"e203bec19f63678a","name":"请求头","source":"e203bec19f63678a.txt","type":"text/plain","size":209},{"uid":"24aa3552bd2994a2","name":"请求参数","source":"24aa3552bd2994a2.json","type":"application/json","size":12},{"uid":"22237408d5a3680a","name":"响应信息","source":"22237408d5a3680a.txt","type":"text/plain","size":14},{"uid":"ba91014ae7336be1","name":"响应体","source":"ba91014ae7336be1.json","type":"application/json","size":72}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/403/analyze'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAyOTksImV4cCI6MTc1Mzk5NzQ5OX0.Xwa21DHeAsigh3P7bUUhz5hOy92nf8ieD4DKV5ECtQs'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'操作成功'","time":{"start":1753990299190,"stop":1753990299190,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'操作成功'"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'GET' '/crawler/tasks/403/analyze/status'","time":{"start":1753990299191,"stop":1753990299205,"duration":14},"status":"passed","steps":[],"attachments":[{"uid":"77f172b901419068","name":"请求信息","source":"77f172b901419068.txt","type":"text/plain","size":63},{"uid":"4ac54225ffac681","name":"请求头","source":"4ac54225ffac681.txt","type":"text/plain","size":209},{"uid":"2ca910b0e6557a5a","name":"请求参数","source":"2ca910b0e6557a5a.json","type":"application/json","size":12},{"uid":"95768a1b4348ecc5","name":"响应信息","source":"95768a1b4348ecc5.txt","type":"text/plain","size":14},{"uid":"fcdff8a133cd5bd","name":"响应体","source":"fcdff8a133cd5bd.json","type":"application/json","size":63}],"parameters":[{"name":"method","value":"'GET'"},{"name":"endpoint","value":"'/crawler/tasks/403/analyze/status'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAyOTksImV4cCI6MTc1Mzk5NzQ5OX0.Xwa21DHeAsigh3P7bUUhz5hOy92nf8ieD4DKV5ECtQs'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息None","time":{"start":1753990299205,"stop":1753990299205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [200]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"None"},{"name":"expected_message","value":"None"},{"name":"is_file","value":"False"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"3ccb2a70126cac2f","name":"测试信息","source":"3ccb2a70126cac2f.txt","type":"text/plain","size":19},{"uid":"8fe59d87743fb2f5","name":"前置依赖","source":"8fe59d87743fb2f5.txt","type":"text/plain","size":48},{"uid":"fe59c3460fed2017","name":"前置操作结果","source":"fe59c3460fed2017.txt","type":"text/plain","size":21},{"uid":"b4ff6c101895bc6a","name":"状态轮询","source":"b4ff6c101895bc6a.txt","type":"text/plain","size":39},{"uid":"f2885b2171798287","name":"log","source":"f2885b2171798287.txt","type":"text/plain","size":3318},{"uid":"ad7d8a09453f420b","name":"stdout","source":"ad7d8a09453f420b.txt","type":"text/plain","size":183},{"uid":"31cb4e686fa41a3","name":"stderr","source":"31cb4e686fa41a3.txt","type":"text/plain","size":2671}],"parameters":[],"attachmentsCount":17,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":4},"afterStages":[{"name":"task_id::0","time":{"start":1753990299214,"stop":1753990299233,"duration":19},"status":"passed","steps":[{"name":"发送请求：'DELETE' '/crawler/tasks/403'","time":{"start":1753990299214,"stop":1753990299233,"duration":19},"status":"passed","steps":[],"attachments":[{"uid":"7c22a1bf9de5cafe","name":"请求信息","source":"7c22a1bf9de5cafe.txt","type":"text/plain","size":48},{"uid":"574252580cd6b43c","name":"请求头","source":"574252580cd6b43c.txt","type":"text/plain","size":209},{"uid":"be0a44f918754689","name":"请求参数","source":"be0a44f918754689.json","type":"application/json","size":12},{"uid":"de7e4c23f5713e6a","name":"响应信息","source":"de7e4c23f5713e6a.txt","type":"text/plain","size":14},{"uid":"20e659ceb5f36c6a","name":"响应体","source":"20e659ceb5f36c6a.json","type":"application/json","size":69}],"parameters":[{"name":"method","value":"'DELETE'"},{"name":"endpoint","value":"'/crawler/tasks/403'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"None"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5OTAyOTksImV4cCI6MTc1Mzk5NzQ5OX0.Xwa21DHeAsigh3P7bUUhz5hOy92nf8ieD4DKV5ECtQs'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"21968-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"554a6e039d436193.json","parameterValues":["{'case_id': 'task_017', 'name': '下载分析后的PPT', 'method': 'GET', 'url': '/crawler/tasks/{task_id}/analyze/ppt', 'headers': {'Authorization': ''}, 'expected_code': 200, 'expected_content_type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation'}"]}