{"uid":"1f44bb871e02c91e","name":"test_crawler_tasks[case7]","fullName":"tests.test_crawler_tasks#test_crawler_tasks","historyId":"0606640eb7a015d468e25ddaa8b9d211","time":{"start":1753986170438,"stop":1753986170562,"duration":124},"status":"failed","statusMessage":"AssertionError: 状态码不符：预期200，实际403，完整response：<Response [403]>\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code","statusTrace":"case = {'case_id': 'task_008', 'expected_code': 200, 'expected_message': '任务已暂停', 'expected_success': True, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODYxNzAsImV4cCI6MTc1Mzk5MzM3MH0.dlHb9YfoVhhaAlRAacmlq8MP7W0Hj6q4fZYezbd_jmg'\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token):\n        allure.story(case[\"name\"])\n        allure.title(case[\"case_id\"] + \": \" + case[\"name\"])\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            # 先创建一个测试任务获取ID\n            from utils.context import context\n            if not context.get(\"task_id\"):\n                create_response = Request.send_request(\n                    \"POST\", \"/crawler/tasks\",\n                    json={\n                        \"processName\": \"测试任务\",\n                        \"asinList\": \"B08XJ8J7SZ\",\n                        \"requiredInfo\": [\"price\"],\n                        \"platform\": \"Amazon\",\n                        \"timeCycle\": \"daily\"\n                    },\n                    token=auth_token\n                )\n                context.set(\"task_id\", create_response.json()[\"data\"][\"id\"])\n            task_id = context.get(\"task_id\")\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n    \n        # 预处理请求\n        request_data = preprocess_request(case, auth_token)\n    \n        # 发送请求\n        response = Request.send_request(\n            method=case[\"method\"],\n            endpoint=case[\"url\"],\n            json=request_data.get(\"json\"),\n            params=request_data.get(\"params\"),\n            headers=request_data.get(\"headers\"),\n            token=auth_token\n        )\n    \n        # 断言\n>       assert_response(\n            response,\n            expected_code=case[\"expected_code\"],\n            expected_success=case.get(\"expected_success\"),\n            expected_message=case.get(\"expected_message\")\n        )\n\ntests\\test_crawler_tasks.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>, expected_code = 200\nexpected_success = True, expected_message = '任务已暂停'\n\n    @allure.step(\"验证响应：状态码{expected_code}，消息{expected_message}\")\n    def assert_response(response, expected_code, expected_success=None, expected_message=None):\n        \"\"\"验证响应结果\"\"\"\n>       assert response.status_code == expected_code, \\\n            f\"状态码不符：预期{expected_code}，实际{response.status_code}，完整response：{response}\"\nE       AssertionError: 状态码不符：预期200，实际403，完整response：<Response [403]>\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\nutils\\test_utils.py:7: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"auth_token","time":{"start":1753986170262,"stop":1753986170437,"duration":175},"status":"passed","steps":[{"name":"发送请求：'POST' '/auth/login'","time":{"start":1753986170262,"stop":1753986170436,"duration":174},"status":"passed","steps":[],"attachments":[{"uid":"4d6e198f3d2d5d0","name":"请求信息","source":"4d6e198f3d2d5d0.txt","type":"text/plain","size":41},{"uid":"bf81e95e8205a7f6","name":"请求头","source":"bf81e95e8205a7f6.txt","type":"text/plain","size":45},{"uid":"8f306d7bb333e062","name":"请求参数","source":"8f306d7bb333e062.json","type":"application/json","size":58},{"uid":"c0dce0d425a5aea","name":"响应信息","source":"c0dce0d425a5aea.txt","type":"text/plain","size":14},{"uid":"ff35489f915690b0","name":"响应体","source":"ff35489f915690b0.json","type":"application/json","size":214}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/auth/login'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'username': 'admin1155', 'password': 'admin1155'}"},{"name":"files","value":"None"},{"name":"token","value":"None"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":1}],"testStage":{"status":"failed","statusMessage":"AssertionError: 状态码不符：预期200，实际403，完整response：<Response [403]>\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code","statusTrace":"case = {'case_id': 'task_008', 'expected_code': 200, 'expected_message': '任务已暂停', 'expected_success': True, ...}\nauth_token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODYxNzAsImV4cCI6MTc1Mzk5MzM3MH0.dlHb9YfoVhhaAlRAacmlq8MP7W0Hj6q4fZYezbd_jmg'\n\n    @allure.feature(\"爬虫任务模块\")\n    @pytest.mark.parametrize(\"case\", CASES)\n    def test_crawler_tasks(case, auth_token):\n        allure.story(case[\"name\"])\n        allure.title(case[\"case_id\"] + \": \" + case[\"name\"])\n    \n        # 替换任务ID占位符\n        if \"{task_id}\" in case[\"url\"]:\n            # 先创建一个测试任务获取ID\n            from utils.context import context\n            if not context.get(\"task_id\"):\n                create_response = Request.send_request(\n                    \"POST\", \"/crawler/tasks\",\n                    json={\n                        \"processName\": \"测试任务\",\n                        \"asinList\": \"B08XJ8J7SZ\",\n                        \"requiredInfo\": [\"price\"],\n                        \"platform\": \"Amazon\",\n                        \"timeCycle\": \"daily\"\n                    },\n                    token=auth_token\n                )\n                context.set(\"task_id\", create_response.json()[\"data\"][\"id\"])\n            task_id = context.get(\"task_id\")\n            case[\"url\"] = case[\"url\"].replace(\"{task_id}\", str(task_id))\n    \n        # 预处理请求\n        request_data = preprocess_request(case, auth_token)\n    \n        # 发送请求\n        response = Request.send_request(\n            method=case[\"method\"],\n            endpoint=case[\"url\"],\n            json=request_data.get(\"json\"),\n            params=request_data.get(\"params\"),\n            headers=request_data.get(\"headers\"),\n            token=auth_token\n        )\n    \n        # 断言\n>       assert_response(\n            response,\n            expected_code=case[\"expected_code\"],\n            expected_success=case.get(\"expected_success\"),\n            expected_message=case.get(\"expected_message\")\n        )\n\ntests\\test_crawler_tasks.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [403]>, expected_code = 200\nexpected_success = True, expected_message = '任务已暂停'\n\n    @allure.step(\"验证响应：状态码{expected_code}，消息{expected_message}\")\n    def assert_response(response, expected_code, expected_success=None, expected_message=None):\n        \"\"\"验证响应结果\"\"\"\n>       assert response.status_code == expected_code, \\\n            f\"状态码不符：预期{expected_code}，实际{response.status_code}，完整response：{response}\"\nE       AssertionError: 状态码不符：预期200，实际403，完整response：<Response [403]>\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\nutils\\test_utils.py:7: AssertionError","steps":[{"name":"发送请求：'POST' '/crawler/tasks'","time":{"start":1753986170439,"stop":1753986170522,"duration":83},"status":"passed","steps":[],"attachments":[{"uid":"80008fd4bc8c6b27","name":"请求信息","source":"80008fd4bc8c6b27.txt","type":"text/plain","size":44},{"uid":"47ec067ebbc83e5a","name":"请求头","source":"47ec067ebbc83e5a.txt","type":"text/plain","size":209},{"uid":"31e5b0afe852c11e","name":"请求参数","source":"31e5b0afe852c11e.json","type":"application/json","size":136},{"uid":"530cd1e6f5f2f699","name":"响应信息","source":"530cd1e6f5f2f699.txt","type":"text/plain","size":14},{"uid":"271dd3c0f694c533","name":"响应体","source":"271dd3c0f694c533.json","type":"application/json","size":321}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks'"},{"name":"headers","value":"None"},{"name":"params","value":"None"},{"name":"json","value":"{'processName': '测试任务', 'asinList': 'B08XJ8J7SZ', 'requiredInfo': ['price'], 'platform': 'Amazon', 'timeCycle': 'daily'}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODYxNzAsImV4cCI6MTc1Mzk5MzM3MH0.dlHb9YfoVhhaAlRAacmlq8MP7W0Hj6q4fZYezbd_jmg'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"发送请求：'POST' '/crawler/tasks/237/pause'","time":{"start":1753986170523,"stop":1753986170557,"duration":34},"status":"passed","steps":[],"attachments":[{"uid":"175e60cce2e41dad","name":"请求信息","source":"175e60cce2e41dad.txt","type":"text/plain","size":54},{"uid":"6dcd16801399e5a8","name":"请求头","source":"6dcd16801399e5a8.txt","type":"text/plain","size":73},{"uid":"fed0d2f684789f29","name":"请求参数","source":"fed0d2f684789f29.json","type":"application/json","size":10},{"uid":"361a366088a501ba","name":"响应信息","source":"361a366088a501ba.txt","type":"text/plain","size":14},{"uid":"d57f70b65fb31e05","name":"响应体","source":"d57f70b65fb31e05.json","type":"application/json","size":0}],"parameters":[{"name":"method","value":"'POST'"},{"name":"endpoint","value":"'/crawler/tasks/237/pause'"},{"name":"headers","value":"{'Authorization': 'Bearer '}"},{"name":"params","value":"{}"},{"name":"json","value":"{}"},{"name":"files","value":"None"},{"name":"token","value":"'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbjExNTUiLCJpYXQiOjE3NTM5ODYxNzAsImV4cCI6MTc1Mzk5MzM3MH0.dlHb9YfoVhhaAlRAacmlq8MP7W0Hj6q4fZYezbd_jmg'"}],"attachmentsCount":5,"shouldDisplayMessage":false,"hasContent":true,"attachmentStep":false,"stepsCount":0},{"name":"验证响应：状态码200，消息'任务已暂停'","time":{"start":1753986170557,"stop":1753986170558,"duration":1},"status":"failed","statusMessage":"AssertionError: 状态码不符：预期200，实际403，完整response：<Response [403]>\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code\n","statusTrace":"  File \"D:\\Anaconda3\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\工作记录\\项目说明\\api_test\\utils\\test_utils.py\", line 7, in assert_response\n    assert response.status_code == expected_code, \\\n","steps":[],"attachments":[],"parameters":[{"name":"response","value":"<Response [403]>"},{"name":"expected_code","value":"200"},{"name":"expected_success","value":"True"},{"name":"expected_message","value":"'任务已暂停'"}],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0}],"attachments":[{"uid":"e46f17f99a8c7f4a","name":"log","source":"e46f17f99a8c7f4a.txt","type":"text/plain","size":1835},{"uid":"59661c910920f4cd","name":"stdout","source":"59661c910920f4cd.txt","type":"text/plain","size":183},{"uid":"ef660df063a5bad0","name":"stderr","source":"ef660df063a5bad0.txt","type":"text/plain","size":1459}],"parameters":[],"attachmentsCount":13,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":3},"afterStages":[],"labels":[{"name":"feature","value":"爬虫任务模块"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_crawler_tasks"},{"name":"host","value":"CYJ"},{"name":"thread","value":"3924-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_crawler_tasks"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'case_id': 'task_008', 'name': '暂停活跃任务', 'method': 'POST', 'url': '/crawler/tasks/{task_id}/pause', 'headers': {'Authorization': 'Bearer '}, 'expected_code': 200, 'expected_success': True, 'expected_message': '任务已暂停'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"1f44bb871e02c91e.json","parameterValues":["{'case_id': 'task_008', 'name': '暂停活跃任务', 'method': 'POST', 'url': '/crawler/tasks/{task_id}/pause', 'headers': {'Authorization': 'Bearer '}, 'expected_code': 200, 'expected_success': True, 'expected_message': '任务已暂停'}"]}